Prog "funct_letrec" ["Prelude"] [] [Func ("funct_letrec","take5") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case Flex (Var 5) [Branch (Pattern ("Prelude",":") [6,7]) (Case Flex (Var 7) [Branch (Pattern ("Prelude",":") [8,9]) (Case Flex (Var 9) [Branch (Pattern ("Prelude",":") [10,11]) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude",":") [Var 8,Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude","[]") []]]]]])])])])])])),Func ("funct_letrec","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Comb FuncCall ("Prelude","take") [Lit (Intc 5),Comb FuncCall ("funct_letrec","fx") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)]]])),Func ("funct_letrec","fx") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)],Comb FuncCall ("funct_letrec","fy") [Var 1,Var 2]])),Func ("funct_letrec","fy") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","*") [Var 1],Var 2],Comb FuncCall ("funct_letrec","fx") [Var 1,Var 2]])),Func ("funct_letrec","fx'") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)],Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","*") [Var 1],Var 2],Comb FuncCall ("funct_letrec","fx'") [Var 1,Var 2]]]))] []