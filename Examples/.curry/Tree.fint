Prog "Tree" ["Prelude"] [Type ("Tree","Tree") Public [0] [Cons ("Tree","Leaf") 0 Public [],Cons ("Tree","Branch") 3 Public [TVar 0,TCons ("Tree","Tree") [TVar 0],TCons ("Tree","Tree") [TVar 0]]]] [Func ("Tree","_inst#Prelude.Eq#Tree.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("Tree","Tree") [TVar 0]])) (Rule [] (Var 0)),Func ("Tree","_impl#==#Prelude.Eq#Tree.Tree") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("Tree","Tree") [TVar 0]) (FuncType (TCons ("Tree","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("Tree","_impl#/=#Prelude.Eq#Tree.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("Tree","Tree") [TVar 0]) (FuncType (TCons ("Tree","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("Tree","test_t") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("Tree","test_f") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0))] []