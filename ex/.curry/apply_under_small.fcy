Prog "apply_under_small" ["Prelude"] [] [Func ("apply_under_small","f") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TVar 0)))) (Rule [1,2] (Case Flex (Var 2) [Branch (LPattern (Intc 0)) (Comb (FuncPartCall 1) ("apply_under_small","g") [Var 1])])),Func ("apply_under_small","g") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("Prelude","Int") []) (TVar 0))) (Rule [1,2] (Case Flex (Var 2) [Branch (LPattern (Intc 1)) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)])])),Func ("apply_under_small","main") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("apply_under_small","f") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Lit (Intc 0)],Lit (Intc 1)]))] []