Prog "average" ["Prelude","Some"] [] [Func ("average","average") 3 Public (FuncType (TCons ("Prelude","_Dict#Integral") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0)))) (Rule [1,2,3] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","div") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","_super#Prelude.Real#Prelude.Num") [Comb FuncCall ("Prelude","_super#Prelude.Integral#Prelude.Real") [Var 1]]],Var 2],Var 3]],Comb FuncCall ("Some","two") [Comb FuncCall ("Prelude","_super#Prelude.Real#Prelude.Num") [Comb FuncCall ("Prelude","_super#Prelude.Integral#Prelude.Real") [Var 1]]]])),Func ("average","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Integral") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("average","average") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Comb FuncCall ("Prelude","_super#Prelude.Real#Prelude.Num") [Comb FuncCall ("Prelude","_super#Prelude.Integral#Prelude.Real") [Var 1]]],Lit (Intc 4)],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Comb FuncCall ("Prelude","_super#Prelude.Real#Prelude.Num") [Comb FuncCall ("Prelude","_super#Prelude.Integral#Prelude.Real") [Var 1]]],Lit (Intc 6)]]))] []