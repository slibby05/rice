Prog "or_stmt" ["Prelude"] [] [Func ("or_stmt","f") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])) (Rule [1] (Or (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 1,Lit (Intc 1)]) [Branch (Pattern ("Prelude","True") []) (Lit (Intc 2)),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 1,Lit (Intc 2)]) [Branch (Pattern ("Prelude","True") []) (Lit (Intc 3)),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]) (Let [(2,Comb ConsCall ("Prelude",":") [Var 1,Var 2])] (Comb FuncCall ("Prelude","head") [Var 2])))),Func ("or_stmt","main") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("or_stmt","f") [Lit (Intc 1)],Comb FuncCall ("or_stmt","f") [Lit (Intc 3)]]))] []