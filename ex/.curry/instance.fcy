Prog "instance" ["Prelude"] [Type ("instance","Tree") Public [0] [Cons ("instance","Leaf") 0 Public [],Cons ("instance","Branch") 3 Public [TVar 0,TCons ("instance","Tree") [TVar 0],TCons ("instance","Tree") [TVar 0]]]] [Func ("instance","_inst#Prelude.Eq#instance.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("instance","Tree") [TVar 0]])) (Rule [1] (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("instance","_impl#==#Prelude.Eq#instance.Tree") [Var 1],Comb FuncCall ("instance","_impl#/=#Prelude.Eq#instance.Tree") [Var 1]])),Func ("instance","_impl#==#Prelude.Eq#instance.Tree") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Case Flex (Var 2) [Branch (Pattern ("instance","Leaf") []) (Case Flex (Var 3) [Branch (Pattern ("instance","Leaf") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("instance","Branch") [4,5,6]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("instance","Branch") [7,8,9]) (Case Flex (Var 3) [Branch (Pattern ("instance","Leaf") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("instance","Branch") [10,11,12]) (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","==") [Var 1],Var 7],Var 10],Comb FuncCall ("Prelude","&&") [Comb FuncCall ("instance","_impl#==#Prelude.Eq#instance.Tree") [Var 1,Var 8,Var 11],Comb FuncCall ("instance","_impl#==#Prelude.Eq#instance.Tree") [Var 1,Var 9,Var 12]]])])])),Func ("instance","_impl#/=#Prelude.Eq#instance.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [1] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb FuncCall ("instance","_inst#Prelude.Eq#instance.Tree") [Var 1]])),Func ("instance","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("instance","_impl#==#Prelude.Eq#instance.Tree") [Comb FuncCall ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Comb ConsCall ("instance","Branch") [Lit (Intc 1),Comb ConsCall ("instance","Leaf") [],Comb ConsCall ("instance","Leaf") []],Comb ConsCall ("instance","Branch") [Lit (Intc 1),Comb ConsCall ("instance","Leaf") [],Comb ConsCall ("instance","Leaf") []]]))] []