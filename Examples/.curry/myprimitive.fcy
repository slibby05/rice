Prog "myprimitive" ["Prelude"] [Type ("myprimitive","Invisible") Public [] [Cons ("myprimitive","_Constr#Invisible") 1 Private [TCons ("myprimitive","Invisible") []]],Type ("myprimitive","Color") Public [] [Cons ("myprimitive","Red") 0 Public [],Cons ("myprimitive","Green") 0 Public [],Cons ("myprimitive","Blue") 0 Public []]] [Func ("myprimitive","_inst#Prelude.Show#myprimitive.Color") 0 Public (TCons ("Prelude","_Dict#Show") [TCons ("myprimitive","Color") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("myprimitive","_impl#show#Prelude.Show#myprimitive.Color") [],Comb (FuncPartCall 2) ("myprimitive","_impl#showsPrec#Prelude.Show#myprimitive.Color") [],Comb FuncCall ("myprimitive","_impl#showList#Prelude.Show#myprimitive.Color") []])),Func ("myprimitive","_impl#show#Prelude.Show#myprimitive.Color") 0 Public (FuncType (TCons ("myprimitive","Color") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb FuncCall ("myprimitive","_inst#Prelude.Show#myprimitive.Color") []])),Func ("myprimitive","_impl#showsPrec#Prelude.Show#myprimitive.Color") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("myprimitive","Color") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("myprimitive","Red") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'R'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'd'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("myprimitive","Green") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("myprimitive","Blue") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]])])),Func ("myprimitive","_impl#showList#Prelude.Show#myprimitive.Color") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("myprimitive","Color") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#showList#Prelude.Show") [Comb FuncCall ("myprimitive","_inst#Prelude.Show#myprimitive.Color") []])),Func ("myprimitive","main") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("myprimitive","_impl#show#Prelude.Show#myprimitive.Color") [],Comb ConsCall ("myprimitive","Red") []]))] []