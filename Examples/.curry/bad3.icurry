interface bad3 where {
import Prelude;
t1 0 :: Prelude.Num a => ([(a, a)], [(a, a)]);
t2 0 :: Prelude.Num a => ([(a, a)], [(a, a)]);
hiding class Prelude.Num a;
instance Prelude.Num Prelude.Float {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
instance Prelude.Num Prelude.Int {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
hiding data Prelude.Float;
hiding data Prelude.Int
}