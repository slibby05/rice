Prog "Main" ["FlatCurry.Pretty","FlatCurry.Read","FlatCurry.Types","GetOpt","List","Normalize","Prelude","System","Text.Pretty","Text.PrettyImpl","FlatCurry.Goodies","Control.SetFunctions"] [Type ("Main","FileType") Public [] [Cons ("Main","SFlat") 0 Public [],Cons ("Main","STransformed") 0 Public [],Cons ("Main","SICurry") 0 Public [],Cons ("Main","SC") 0 Public []]] [Func ("Main","_inst#Prelude.Show#Main.FileType") 0 Public (TCons ("Prelude","_Dict#Show") [TCons ("Main","FileType") []]) (Rule [] (Var 0)),Func ("Main","_impl#show#Prelude.Show#Main.FileType") 0 Public (FuncType (TCons ("Main","FileType") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Main","_impl#showsPrec#Prelude.Show#Main.FileType") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Main","FileType") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [] (Var 0)),Func ("Main","_impl#showList#Prelude.Show#Main.FileType") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Main","FileType") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("Main","_inst#Prelude.Eq#Main.FileType") 0 Public (TCons ("Prelude","_Dict#Eq") [TCons ("Main","FileType") []]) (Rule [] (Var 0)),Func ("Main","_impl#==#Prelude.Eq#Main.FileType") 2 Public (FuncType (TCons ("Main","FileType") []) (FuncType (TCons ("Main","FileType") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Main","_impl#/=#Prelude.Eq#Main.FileType") 0 Public (FuncType (TCons ("Main","FileType") []) (FuncType (TCons ("Main","FileType") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Main","rewrite") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("FlatCurry.Types","Expr") []]])) (Rule [] (Var 0)),Func ("Main","rewrite.j.2") 1 Private (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Main","rewrite.f.2") 1 Private (FuncType (TCons ("FlatCurry.Types","Prog") []) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("FlatCurry.Types","Expr") []])) (Rule [] (Var 0)),Func ("Main","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("Main","main.writeOpt.18") 5 Private (FuncType (TCons ("Prelude","_Dict#Show") [TVar 0]) (FuncType (TCons ("Main","FileType") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]]) (FuncType (FuncType (TVar 0) (TCons ("Text.PrettyImpl","Doc") [])) (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))))) (Rule [] (Var 0)),Func ("Main","main._#lambda3") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Main","main._#lambda3._#selFP2#opts") 1 Private (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]])) (Rule [] (Var 0)),Func ("Main","main._#lambda3._#selFP3#files") 1 Private (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Main","main._#lambda3._#selFP4#errors'") 1 Private (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Main","main._#lambda3._#lambda6") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry.Types","Prog") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Main","optDescrs") 0 Public (TCons ("Prelude","[]") [TCons ("GetOpt","OptDescr") [TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []]]]) (Rule [] (Var 0)),Func ("Main","optDescrs._#lambda8") 1 Private (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []])) (Rule [] (Var 0)),Func ("Main","optDescrs._#lambda9") 1 Private (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []])) (Rule [] (Var 0)),Func ("Main","optDescrs._#lambda10") 1 Private (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []])) (Rule [] (Var 0)),Func ("Main","optDescrs._#lambda11") 1 Private (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Main","FileType") []])) (Rule [] (Var 0))] []