Prog "plain" ["Prelude"] [Type ("plain","Nat") Public [] [Cons ("plain","Zero") 0 Public [],Cons ("plain","Succ") 1 Public [TCons ("plain","Nat") []]],Type ("plain","MyList") Public [0] [Cons ("plain","MyNil") 0 Public [],Cons ("plain","MyCons") 2 Public [TVar 0,TCons ("plain","MyList") [TVar 0]]]] [Func ("plain","half") 1 Public (FuncType (TCons ("plain","Nat") []) (TCons ("plain","Nat") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("plain","Zero") []) (Comb ConsCall ("plain","Zero") []),Branch (Pattern ("plain","Succ") [2]) (Case Flex (Var 2) [Branch (Pattern ("plain","Zero") []) (Comb ConsCall ("plain","Zero") []),Branch (Pattern ("plain","Succ") [3]) (Comb ConsCall ("plain","Succ") [Comb FuncCall ("plain","half") [Var 3]])])])),Func ("plain","myappend") 2 Public (FuncType (TCons ("plain","MyList") [TVar 0]) (FuncType (TCons ("plain","MyList") [TVar 0]) (TCons ("plain","MyList") [TVar 0]))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("plain","MyNil") []) (Var 2),Branch (Pattern ("plain","MyCons") [3,4]) (Comb ConsCall ("plain","MyCons") [Var 3,Comb FuncCall ("plain","myappend") [Var 4,Var 2]])])),Func ("plain","main") 0 Public (TCons ("Prelude","(,)") [TCons ("plain","Nat") [],TCons ("plain","MyList") [TCons ("plain","Nat") []]]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("plain","half") [Comb ConsCall ("plain","Succ") [Comb ConsCall ("plain","Zero") []]],Comb FuncCall ("plain","myappend") [Comb ConsCall ("plain","MyCons") [Comb ConsCall ("plain","Zero") [],Comb ConsCall ("plain","MyNil") []],Comb ConsCall ("plain","MyNil") []]]))] []