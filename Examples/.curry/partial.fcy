Prog "partial" ["Prelude"] [] [Func ("partial","f") 6 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Var 1],Var 2],Var 3]],Var 4]],Var 5]],Var 6])),Func ("partial","g") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0)))))) (Rule [1,2] (Comb (FuncPartCall 3) ("partial","f") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 0)],Var 2])),Func ("partial","h") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0))))) (Rule [1,2] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("partial","g") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)]],Var 2])),Func ("partial","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0)))) (Rule [1] (Comb FuncCall ("partial","h") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)]]))] []