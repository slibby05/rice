Prog "order" ["Prelude"] [Type ("order","MyList") Public [0] [Cons ("order","MyNil") 0 Public [],Cons ("order","MyCons") 2 Public [TVar 0,TCons ("order","MyList") [TVar 0]]],Type ("order","BinTree") Public [0] [Cons ("order","Leaf") 0 Public [],Cons ("order","Branch") 3 Public [TVar 0,TCons ("order","BinTree") [TVar 0],TCons ("order","BinTree") [TVar 0]]]] [Func ("order","_inst#Prelude.Eq#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("order","MyList") [TVar 0]])) (Rule [] (Var 0)),Func ("order","_impl#==#Prelude.Eq#order.MyList") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#/=#Prelude.Eq#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_inst#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (TCons ("Prelude","_Dict#Ord") [TCons ("order","MyList") [TVar 0]])) (Rule [] (Var 0)),Func ("order","_impl#compare#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Ordering") [])))) (Rule [] (Var 0)),Func ("order","_impl#<=#Prelude.Ord#order.MyList") 3 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#>=#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#<#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#>#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#min#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("order","MyList") [TVar 0])))) (Rule [] (Var 0)),Func ("order","_impl#max#Prelude.Ord#order.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (FuncType (TCons ("order","MyList") [TVar 0]) (TCons ("order","MyList") [TVar 0])))) (Rule [] (Var 0)),Func ("order","_inst#Prelude.Eq#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("order","BinTree") [TVar 0]])) (Rule [] (Var 0)),Func ("order","_impl#==#Prelude.Eq#order.BinTree") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#/=#Prelude.Eq#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_inst#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (TCons ("Prelude","_Dict#Ord") [TCons ("order","BinTree") [TVar 0]])) (Rule [] (Var 0)),Func ("order","_impl#compare#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Ordering") [])))) (Rule [] (Var 0)),Func ("order","_impl#<=#Prelude.Ord#order.BinTree") 3 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#>=#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#<#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#>#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("order","_impl#min#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("order","BinTree") [TVar 0])))) (Rule [] (Var 0)),Func ("order","_impl#max#Prelude.Ord#order.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (FuncType (TCons ("order","BinTree") [TVar 0]) (TCons ("order","BinTree") [TVar 0])))) (Rule [] (Var 0)),Func ("order","t1") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("order","mytree") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("order","BinTree") [TVar 0])) (Rule [] (Var 0)),Func ("order","t2") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("order","main") 0 Public (TCons ("Prelude","(,)") [TCons ("Prelude","Bool") [],TCons ("Prelude","Bool") []]) (Rule [] (Var 0))] []