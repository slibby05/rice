Prog "poor_free" ["Prelude"] [] [Func ("poor_free","f") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Comb ConsCall ("Prelude",":") [Var 1,Free [2] (Var 2)])),Func ("poor_free","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TVar 0)) (Rule [1] (Case Rigid (Comb FuncCall ("poor_free","f") [Comb ConsCall ("Prelude","True") []]) [Branch (Pattern ("Prelude",":") [2,3]) (Case Rigid (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case Rigid (Var 4) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 5) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)])]),Branch (Pattern ("Prelude","False") []) (Case Rigid (Var 5) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)])])])])])]))] []