(Prog "ndtest" ["Prelude"] [] [(Func ("ndtest","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Let [(1,(Comb FuncCall ("Prelude","?") [(Lit (Intc 0)),(Lit (Intc 1))]))] (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [(Var 1),(Lit (Intc 0))]) [(Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") [])),(Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","=:=") [(Var 1),(Lit (Intc 1))]) [(Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","False") [])),(Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") []))]))]))))] [])