Prog "no-need-case" ["Prelude"] [] [Func ("no-need-case","f") 3 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Prelude","Int") [])))) (Rule [1,2,3] (Comb FuncCall ("no-need-case","g") [Var 2,Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 2,Lit (Intc 1)]) [Branch (Pattern ("Prelude","True") []) (Var 3),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 2,Lit (Intc 2)]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 6)]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]])),Func ("no-need-case","g") 2 Public (FuncType (TVar 0) (FuncType (TVar 1) (TVar 0))) (Rule [1,2] (Var 1)),Func ("no-need-case","f'") 5 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 1]) (FuncType (TVar 0) (FuncType (TVar 1) (TVar 0)))))) (Rule [1,2,3,4,5] (Comb FuncCall ("no-need-case","g") [Var 4,Case Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","==") [Var 1],Var 4],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 2],Lit (Intc 1)]]) [Branch (Pattern ("Prelude","True") []) (Var 5),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","==") [Var 1],Var 4],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 2],Lit (Intc 2)]]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 3],Lit (Intc 7)]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]])),Func ("no-need-case","main") 2 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("no-need-case","f") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Lit (Intc 3),Lit (Intc 4)],Comb FuncCall ("no-need-case","f'") [Var 1,Var 2,Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 2],Lit (Intc 9)],Lit (Intc 8)]]))] []