interface tryext where {
import Prelude;
f 1 :: [a] -> (a, Prelude.Int);
g 1 :: a -> (a, Prelude.Int);
main 0 :: Prelude.Num a => (a, Prelude.Int);
hiding data Prelude.Int;
hiding class Prelude.Num a;
instance Prelude.Num Prelude.Float {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
instance Prelude.Num Prelude.Int {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
hiding data Prelude.Float
}