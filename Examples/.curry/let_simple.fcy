Prog "let_simple" ["Prelude"] [] [Func ("let_simple","t") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TVar 0])) (Rule [1] (Let [(2,Comb FuncCall ("Prelude","?") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 0)],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)]])] (Comb ConsCall ("Prelude","(,)") [Var 2,Var 2])))] []