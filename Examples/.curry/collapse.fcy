Prog "collapse" ["Prelude"] [] [Func ("collapse","fst") 1 Public (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 1]) (TVar 0)) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("collapse","snd") 1 Public (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 1]) (TVar 1)) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("collapse","main") 0 Public (TCons ("Prelude","(,)") [TCons ("Prelude","Char") [],TCons ("Prelude","Char") []]) (Rule [] (Let [(1,Comb ConsCall ("Prelude","(,)") [Lit (Charc 'a'),Lit (Charc 'b')])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("collapse","fst") [Var 1],Comb FuncCall ("collapse","snd") [Var 1]])))] []