Prog "ordTest" ["Prelude"] [Type ("ordTest","MyList") Public [0] [Cons ("ordTest","MyNil") 0 Public [],Cons ("ordTest","MyCons") 2 Public [TVar 0,TCons ("ordTest","MyList") [TVar 0]]],Type ("ordTest","BinTree") Public [0] [Cons ("ordTest","Leaf") 0 Public [],Cons ("ordTest","Branch") 3 Public [TVar 0,TCons ("ordTest","BinTree") [TVar 0],TCons ("ordTest","BinTree") [TVar 0]]]] [Func ("ordTest","_inst#Prelude.Eq#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("ordTest","MyList") [TVar 0]])) (Rule [] (Var 0)),Func ("ordTest","_impl#==#Prelude.Eq#ordTest.MyList") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#/=#Prelude.Eq#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_inst#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (TCons ("Prelude","_Dict#Ord") [TCons ("ordTest","MyList") [TVar 0]])) (Rule [] (Var 0)),Func ("ordTest","_impl#compare#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Ordering") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#<=#Prelude.Ord#ordTest.MyList") 3 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#>=#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#<#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#>#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#min#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("ordTest","MyList") [TVar 0])))) (Rule [] (Var 0)),Func ("ordTest","_impl#max#Prelude.Ord#ordTest.MyList") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (FuncType (TCons ("ordTest","MyList") [TVar 0]) (TCons ("ordTest","MyList") [TVar 0])))) (Rule [] (Var 0)),Func ("ordTest","_inst#Prelude.Eq#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("ordTest","BinTree") [TVar 0]])) (Rule [] (Var 0)),Func ("ordTest","_impl#==#Prelude.Eq#ordTest.BinTree") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#/=#Prelude.Eq#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_inst#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (TCons ("Prelude","_Dict#Ord") [TCons ("ordTest","BinTree") [TVar 0]])) (Rule [] (Var 0)),Func ("ordTest","_impl#compare#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Ordering") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#<=#Prelude.Ord#ordTest.BinTree") 3 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#>=#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#<#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#>#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("ordTest","_impl#min#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("ordTest","BinTree") [TVar 0])))) (Rule [] (Var 0)),Func ("ordTest","_impl#max#Prelude.Ord#ordTest.BinTree") 1 Public (FuncType (TCons ("Prelude","_Dict#Ord") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (FuncType (TCons ("ordTest","BinTree") [TVar 0]) (TCons ("ordTest","BinTree") [TVar 0])))) (Rule [] (Var 0)),Func ("ordTest","listTest") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("ordTest","t") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("ordTest","BinTree") [TVar 0])) (Rule [] (Var 0)),Func ("ordTest","treeTest") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("ordTest","main") 0 Public (TCons ("Prelude","(,)") [TCons ("Prelude","Bool") [],TCons ("Prelude","Bool") []]) (Rule [] (Var 0))] []