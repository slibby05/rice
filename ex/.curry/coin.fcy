Prog "coin" ["Prelude"] [] [Func ("coin","coin") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TVar 0)) (Rule [1] (Or (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 0)]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)]))),Func ("coin","double") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TVar 0))) (Rule [1,2] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","+") [Var 1],Var 2],Var 2])),Func ("coin","main") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Comb FuncCall ("coin","double") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Comb FuncCall ("coin","coin") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") []]]))] []