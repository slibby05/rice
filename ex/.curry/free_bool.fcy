Prog "free_bool" ["Prelude"] [] [Func ("free_bool","f") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Comb ConsCall ("Prelude",":") [Var 1,Free [2] (Var 2)])),Func ("free_bool","main") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Case Rigid (Comb FuncCall ("free_bool","f") [Comb ConsCall ("Prelude","True") []]) [Branch (Pattern ("Prelude",":") [1,2]) (Case Rigid (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Case Rigid (Var 4) [Branch (Pattern ("Prelude","[]") []) (Lit (Intc 2))]),Branch (Pattern ("Prelude","False") []) (Case Rigid (Var 4) [Branch (Pattern ("Prelude","[]") []) (Lit (Intc 1))])])])])]))] []