Prog "var_collapse" ["Prelude"] [Type ("var_collapse","Tree") Public [] [Cons ("var_collapse","Leaf") 0 Public [],Cons ("var_collapse","Branch") 3 Public [TCons ("Prelude","Int") [],TCons ("var_collapse","Tree") [],TCons ("var_collapse","Tree") []]]] [Func ("var_collapse","f1") 1 Public (FuncType (TVar 0) (TVar 0)) (Rule [1] (Var 1)),Func ("var_collapse","f2") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TVar 0)) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Var 2),Branch (Pattern ("Prelude",":") [4,5]) (Case Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])),Func ("var_collapse","f3") 1 Public (FuncType (TCons ("var_collapse","Tree") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("var_collapse","Branch") [2,3,4]) (Case Flex (Var 3) [Branch (Pattern ("var_collapse","Branch") [5,6,7]) (Case Flex (Var 7) [Branch (Pattern ("var_collapse","Branch") [8,9,10]) (Var 8)])])])),Func ("var_collapse","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("var_collapse","f2") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 4)],Comb ConsCall ("Prelude","[]") []]]))] []