Prog "mutual_recursion" ["Prelude"] [] [Func ("mutual_recursion","main") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (Rule [] (Let [(1,Comb ConsCall ("Prelude",":") [Lit (Intc 2),Var 2]),(2,Comb ConsCall ("Prelude",":") [Lit (Intc 3),Var 1])] (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","take") [Lit (Intc 5),Var 1],Comb FuncCall ("Prelude","take") [Lit (Intc 5),Var 2]])))] []