Prog "prim" ["Prelude"] [Type ("prim","C") Public [] [Cons ("prim","C") 1 Public [TCons ("Prelude","Char") []]],Type ("prim","I") Public [] [Cons ("prim","I") 1 Public [TCons ("Prelude","Int") []]],Type ("prim","F") Public [] [Cons ("prim","F") 1 Public [TCons ("Prelude","Float") []]]] [Func ("prim","primEqChar") 2 Public (FuncType (TCons ("Prelude","Char") []) (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) (External "prim.primEqChar"),Func ("prim","primEqInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") []))) (External "prim.primEqInt"),Func ("prim","primEqFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Bool") []))) (External "prim.primEqFloat"),Func ("prim","primLtEqChar") 2 Public (FuncType (TCons ("Prelude","Char") []) (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) (External "prim.primLtEqChar"),Func ("prim","primLtEqInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") []))) (External "prim.primLtEqInt"),Func ("prim","primLtEqFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Bool") []))) (External "prim.primLtEqFloat"),Func ("prim","primChr") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Char") [])) (External "prim.primChr"),Func ("prim","primOrd") 1 Public (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Int") [])) (External "prim.primOrd"),Func ("prim","primI2F") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Float") [])) (External "prim.primI2F"),Func ("prim","primAddInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primAddInt"),Func ("prim","primSubInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primSubInt"),Func ("prim","primMulInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primMulInt"),Func ("prim","primDivInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primDivInt"),Func ("prim","primModInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primModInt"),Func ("prim","primQuotInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primQuotInt"),Func ("prim","primRemInt") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") []))) (External "prim.primRemInt"),Func ("prim","primAddFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (External "prim.primAddFloat"),Func ("prim","primSubFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (External "prim.primSubFloat"),Func ("prim","primMulFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (External "prim.primMulFloat"),Func ("prim","primDivFloat") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (External "prim.primDivFloat"),Func ("prim","primNegateFloat") 1 Public (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") [])) (External "prim.primNegateFloat"),Func ("prim","prim_putChar") 1 Public (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (External "prim.prim_putChar"),Func ("prim","&") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Var 2)])),Func ("prim","eqChar") 2 Public (FuncType (TCons ("prim","C") []) (FuncType (TCons ("prim","C") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","C") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","C") [4]) (Comb FuncCall ("prim","primEqChar") [Var 3,Var 4])])])),Func ("prim","eqInt") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb FuncCall ("prim","primEqInt") [Var 3,Var 4])])])),Func ("prim","eqFloat") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb FuncCall ("prim","primEqFloat") [Var 3,Var 4])])])),Func ("prim","ltEqChar") 2 Public (FuncType (TCons ("prim","C") []) (FuncType (TCons ("prim","C") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","C") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","C") [4]) (Comb FuncCall ("prim","primLtEqChar") [Var 3,Var 4])])])),Func ("prim","ltEqInt") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb FuncCall ("prim","primLtEqInt") [Var 3,Var 4])])])),Func ("prim","ltEqFloat") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb FuncCall ("prim","primLtEqFloat") [Var 3,Var 4])])])),Func ("prim","ord") 1 Public (FuncType (TCons ("prim","C") []) (TCons ("prim","I") [])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("prim","C") [2]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primOrd") [Var 2]])])),Func ("prim","chr") 1 Public (FuncType (TCons ("prim","I") []) (TCons ("prim","C") [])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [2]) (Comb ConsCall ("prim","C") [Comb FuncCall ("prim","primChr") [Var 2]])])),Func ("prim","i2f") 1 Public (FuncType (TCons ("prim","I") []) (TCons ("prim","F") [])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [2]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primI2F") [Var 2]])])),Func ("prim","+$") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primAddInt") [Var 3,Var 4]])])])),Func ("prim","-$") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primSubInt") [Var 3,Var 4]])])])),Func ("prim","*$") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primMulInt") [Var 3,Var 4]])])])),Func ("prim","div_") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primDivInt") [Var 3,Var 4]])])])),Func ("prim","mod_") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primModInt") [Var 3,Var 4]])])])),Func ("prim","quot_") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primQuotInt") [Var 3,Var 4]])])])),Func ("prim","rem_") 2 Public (FuncType (TCons ("prim","I") []) (FuncType (TCons ("prim","I") []) (TCons ("prim","I") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","I") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","I") [4]) (Comb ConsCall ("prim","I") [Comb FuncCall ("prim","primRemInt") [Var 3,Var 4]])])])),Func ("prim","negateFloat") 1 Public (FuncType (TCons ("prim","F") []) (TCons ("prim","F") [])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [2]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primNegateFloat") [Var 2]])])),Func ("prim","+.") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("prim","F") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primAddFloat") [Var 3,Var 4]])])])),Func ("prim","-.") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("prim","F") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primSubFloat") [Var 3,Var 4]])])])),Func ("prim","*.") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("prim","F") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primMulFloat") [Var 3,Var 4]])])])),Func ("prim","/.") 2 Public (FuncType (TCons ("prim","F") []) (FuncType (TCons ("prim","F") []) (TCons ("prim","F") []))) (Rule [1,2] (Case Rigid (Var 1) [Branch (Pattern ("prim","F") [3]) (Case Rigid (Var 2) [Branch (Pattern ("prim","F") [4]) (Comb ConsCall ("prim","F") [Comb FuncCall ("prim","primDivFloat") [Var 3,Var 4]])])])),Func ("prim","putChar") 1 Public (FuncType (TCons ("prim","C") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("prim","C") [2]) (Comb FuncCall ("prim","prim_putChar") [Var 2])]))] []