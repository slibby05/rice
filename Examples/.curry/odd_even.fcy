Prog "odd_even" ["Prelude"] [Type ("odd_even","Pair") Public [0,1] [Cons ("odd_even","Pair") 2 Public [TVar 0,TVar 1]],Type ("odd_even","Nat") Public [] [Cons ("odd_even","Zero") 0 Public [],Cons ("odd_even","Succ") 1 Public [TCons ("odd_even","Nat") []]]] [Func ("odd_even","even") 1 Public (FuncType (TCons ("odd_even","Nat") []) (TCons ("odd_even","Nat") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("odd_even","Zero") []) (Comb ConsCall ("odd_even","Zero") []),Branch (Pattern ("odd_even","Succ") [2]) (Comb FuncCall ("odd_even","odd") [Var 2])])),Func ("odd_even","odd") 1 Public (FuncType (TCons ("odd_even","Nat") []) (TCons ("odd_even","Nat") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("odd_even","Zero") []) (Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Zero") []]),Branch (Pattern ("odd_even","Succ") [2]) (Comb FuncCall ("odd_even","even") [Var 2])])),Func ("odd_even","main") 0 Public (TCons ("odd_even","Nat") []) (Rule [] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("odd_even","odd") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Zero") []]]]]]],Comb FuncCall ("odd_even","even") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Succ") [Comb ConsCall ("odd_even","Zero") []]]]]]]]))] []