interface var_collapse where {
import Prelude;
data Tree = Leaf | Branch Prelude.Int Tree Tree;
f1 1 :: a -> a;
f2 1 :: [a] -> a;
f3 1 :: Tree -> Prelude.Int;
main 0 :: Prelude.Num a => a;
hiding data Prelude.Int;
hiding class Prelude.Num a;
instance Prelude.Num Prelude.Float {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
instance Prelude.Num Prelude.Int {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
hiding data Prelude.Float
}