interface builder where {
import Prelude;
build 2 :: Prelude.Int -> Prelude.Int -> Prelude.Int;
f1 2 :: Prelude.Num a => Prelude.Int -> a -> a;
f2 2 :: Prelude.Num a => a -> Prelude.Int -> a;
loop 0 :: a;
other 2 :: Prelude.Int -> Prelude.Int -> Prelude.Int;
test_build 0 :: Prelude.Int;
test_other 0 :: Prelude.Int;
hiding data Prelude.Int;
hiding class Prelude.Num a;
instance Prelude.Num Prelude.Float {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
instance Prelude.Num Prelude.Int {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
hiding data Prelude.Float
}