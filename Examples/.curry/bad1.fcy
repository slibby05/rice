Prog "bad1" ["Prelude"] [] [Func ("bad1","f") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])) (Rule [1] (Let [(2,Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Var 1,Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Int") [Var 1,Lit (Intc 1)]) [Branch (Pattern ("Prelude","True") []) (Lit (Intc 7)),Branch (Pattern ("Prelude","False") []) (Lit (Intc 9))]]),(3,Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Var 2,Var 1])] (Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Var 3,Lit (Intc 1)])))] []