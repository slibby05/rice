Prog "wrong" ["Prelude"] [] [Func ("wrong","f") 3 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TCons ("Prelude","Bool") []) (TVar 0)))) (Rule [1,2,3] (Comb FuncCall ("wrong","g") [Var 1,Var 2,Case Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Lit (Intc 5)),Branch (Pattern ("Prelude","False") []) (Lit (Intc 6))]])),Func ("wrong","g") 3 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (FuncType (TVar 1) (TVar 0)))) (Rule [1,2,3] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","*") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)]],Var 2])),Func ("wrong","loop") 0 Public (TVar 0) (Rule [] (Comb FuncCall ("wrong","loop") [])),Func ("wrong","main") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("wrong","f") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 2)],Comb FuncCall ("wrong","loop") []]))] []