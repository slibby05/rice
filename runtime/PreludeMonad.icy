IProg "PreludeMonad" ["PreludeBase","PreludeCompare","PreludeNum","PreludeList","PreludeString","PreludeRead"] [] [IFunction ("Prelude","_def#fmap#Prelude.Functor",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 4 (ICCall ("StringConst","No instance or default method for class operation `fmap'",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 3,IVar 4])))),IFunction ("Prelude","_def#>>=#Prelude.Monad",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 4 (ICCall ("StringConst","No instance or default method for class operation `>>='",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 3,IVar 4])))),IFunction ("Prelude","_def#return#Prelude.Monad",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 4 (ICCall ("StringConst","No instance or default method for class operation `return'",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 3,IVar 4])))),IFunction ("Prelude","maybe",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (IVar 2))),IConsBranch ("Prelude","Just",1) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 4 [0])] (IReturn (IFCall ("Prelude","apply",0) [IVar 3,IVar 5])))]))),IFunction ("Prelude","either",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","Right",0) 1 (IBlock [IVarDecl 6] [IVarAssign 6 (IVarAccess 4 [0])] (IReturn (IFCall ("Prelude","apply",0) [IVar 3,IVar 6]))),IConsBranch ("Prelude","Left",1) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 4 [0])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5])))]))),IFunction ("Prelude","userError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (IReturn (ICCall ("Prelude","UserError",0) [IVar 2])))),IFunction ("Prelude","ioError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","ioError#A0",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","prim_error",0) 1 [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 4,IVar 3])))),IFunction ("Prelude","ioError#A0",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 5 (IVarAccess 2 [0]),IVarAssign 6 (IFPCall ("Prelude","showError#P2",0) 2 [IVar 5])] (IReturn (IFCall ("Prelude","build",0) [IVar 6]))),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 9 (IVarAccess 2 [0]),IVarAssign 10 (IFPCall ("Prelude","showError#P4",0) 2 [IVar 9])] (IReturn (IFCall ("Prelude","build",0) [IVar 10]))),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 2 [0]),IVarAssign 4 (IFPCall ("Prelude","showError#P1",0) 2 [IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 4]))),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 7 (IVarAccess 2 [0]),IVarAssign 8 (IFPCall ("Prelude","showError#P3",0) 2 [IVar 7])] (IReturn (IFCall ("Prelude","build",0) [IVar 8])))]))),IFunction ("Prelude","fmap",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Functor",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (IReturn (IVar 3)))]))),IFunction ("Prelude","fail",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Monad",0) 4 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 2 [0]),IVarAssign 5 (IVarAccess 2 [1]),IVarAssign 4 (IVarAccess 2 [2]),IVarAssign 3 (IVarAccess 2 [3])] (IReturn (IVar 6)))]))),IFunction ("Prelude","makeNondetError",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 2 [0]),IVarAssign 3 (IVarAccess 2 [1]),IVarAssign 5 (ICCall ("Prelude","NondetError",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readNondetError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 11)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","NondetError",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 9)]),IVarAssign 10 (IFCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","readNondetError#P0",0) 3 []),IVarAssign 12 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readNondetError#P0",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeNondetError",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","makeFailError",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 2 [0]),IVarAssign 3 (IVarAccess 2 [1]),IVarAssign 5 (ICCall ("Prelude","FailError",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readFailError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 9)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","FailError",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 9)]),IVarAssign 10 (IFCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","readFailError#P1",0) 3 []),IVarAssign 12 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readFailError#P1",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeFailError",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","makeUserError",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 2 [0]),IVarAssign 3 (IVarAccess 2 [1]),IVarAssign 5 (ICCall ("Prelude","UserError",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readUserError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 9)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","UserError",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 9)]),IVarAssign 10 (IFCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","readUserError#P2",0) 3 []),IVarAssign 12 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readUserError#P2",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeUserError",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","makeIOError",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 2 [0]),IVarAssign 3 (IVarAccess 2 [1]),IVarAssign 5 (ICCall ("Prelude","IOError",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readIOError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 7)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","IOError",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 7)]),IVarAssign 10 (IFCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","readIOError#P3",0) 3 []),IVarAssign 12 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readIOError#P3",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeIOError",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError",0) 2 Public [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 3 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 12] [IVarAssign 12 (IVarAccess 3 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 13] [IVarAssign 13 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 13,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 14] [IVarAssign 14 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 12])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P8",0) 1 [IVar 14]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 15] [IVarAssign 15 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 12])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P9",0) 1 [IVar 15])))]))])),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 16] [IVarAssign 16 (IVarAccess 3 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 17] [IVarAssign 17 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 17,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 18] [IVarAssign 18 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 16])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P10",0) 1 [IVar 18]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 19] [IVarAssign 19 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 16])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P11",0) 1 [IVar 19])))]))])),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 3 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 5,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 6] [IVarAssign 6 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 4])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P4",0) 1 [IVar 6]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 4])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P5",0) 1 [IVar 7])))]))])),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 3 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 9,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 10] [IVarAssign 10 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 8])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P6",0) 1 [IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 11] [IVarAssign 11 (IFCall ("Prelude","_impl#showList#Prelude.Show#Prelude.Char",0) [IVar 8])] (IReturn (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P7",0) 1 [IVar 11])))]))]))]))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P11",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("","char",0) [ILit (IChar ')')]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 4,IVar 3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 2,IVar 5]),IVarAssign 7 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 8 (ICCall ("StringConst","NondetError",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 6,IVar 8]),IVarAssign 10 (ICCall ("","char",0) [ILit (IChar '(')])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 9])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P10",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 5 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 6 (ICCall ("StringConst","NondetError ",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 4,IVar 6])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P9",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("","char",0) [ILit (IChar ')')]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 4,IVar 3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 2,IVar 5]),IVarAssign 7 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 8 (ICCall ("StringConst","UserError",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 6,IVar 8]),IVarAssign 10 (ICCall ("","char",0) [ILit (IChar '(')])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 9])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P8",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 5 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 6 (ICCall ("StringConst","UserError ",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 4,IVar 6])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P7",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("","char",0) [ILit (IChar ')')]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 4,IVar 3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 2,IVar 5]),IVarAssign 7 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 8 (ICCall ("StringConst","FailError",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 6,IVar 8]),IVarAssign 10 (ICCall ("","char",0) [ILit (IChar '(')])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 9])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P6",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 5 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 6 (ICCall ("StringConst","FailError ",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 4,IVar 6])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P5",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("","char",0) [ILit (IChar ')')]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 4,IVar 3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 2,IVar 5]),IVarAssign 7 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 8 (ICCall ("StringConst","IOError",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 6,IVar 8]),IVarAssign 10 (ICCall ("","char",0) [ILit (IChar '(')])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 9])))),IFunction ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError#P4",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 5 (IFPCall ("Prelude","showChar",0) 2 []),IVarAssign 6 (ICCall ("StringConst","IOError ",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 4,IVar 6])))),IFunction ("Prelude","_inst#Prelude.Show#Prelude.IOError",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IFPCall ("Prelude","_impl#show#Prelude.Show#Prelude.IOError",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#showList#Prelude.Show#Prelude.IOError",0) 2 []),IVarAssign 4 (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Show",0) [IVar 2,IVar 4,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18,IVarDecl 19,IVarDecl 20,IVarDecl 21,IVarDecl 22,IVarDecl 23,IVarDecl 24] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A4",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","readIOError",0) 1 []),IVarAssign 6 (IFCall ("Prelude","readParen",0) [IVar 4,IVar 5]),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 6,IVar 3]),IVarAssign 8 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A3",0) [IVar 2]),IVarAssign 9 (IFPCall ("Prelude","readUserError",0) 1 []),IVarAssign 10 (IFCall ("Prelude","readParen",0) [IVar 8,IVar 9]),IVarAssign 11 (IFCall ("Prelude","apply",0) [IVar 10,IVar 3]),IVarAssign 12 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A2",0) [IVar 2]),IVarAssign 13 (IFPCall ("Prelude","readFailError",0) 1 []),IVarAssign 14 (IFCall ("Prelude","readParen",0) [IVar 12,IVar 13]),IVarAssign 15 (IFCall ("Prelude","apply",0) [IVar 14,IVar 3]),IVarAssign 16 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A1",0) [IVar 2]),IVarAssign 17 (IFPCall ("Prelude","readNondetError",0) 1 []),IVarAssign 18 (IFCall ("Prelude","readParen",0) [IVar 16,IVar 17]),IVarAssign 19 (IFCall ("Prelude","apply",0) [IVar 18,IVar 3]),IVarAssign 20 (IFPCall ("Prelude","++#P0",0) 2 [IVar 15,IVar 19]),IVarAssign 21 (IFCall ("Prelude","build",0) [IVar 20]),IVarAssign 22 (IFPCall ("Prelude","++#P0",0) 2 [IVar 11,IVar 21]),IVarAssign 23 (IFCall ("Prelude","build",0) [IVar 22]),IVarAssign 24 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 23])] (IReturn (IFCall ("Prelude","build",0) [IVar 24])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A4",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A3",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A2",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError#A1",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.IOError",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.IOError",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 3,IVar 2])))),IFunction ("Prelude","return",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Monad",0) 4 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 2 [0]),IVarAssign 5 (IVarAccess 2 [1]),IVarAssign 4 (IVarAccess 2 [2]),IVarAssign 3 (IVarAccess 2 [3])] (IReturn (IVar 5)))]))),IFunction ("Prelude","whenM",0) 3 Public [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IVar 4))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 6 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 6])))]))),IFunction ("Prelude","unlessM",0) 3 Public [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 6 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 6]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 4)))]))),IFunction ("Prelude",">>",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Monad",0) 4 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 2 [0]),IVarAssign 5 (IVarAccess 2 [1]),IVarAssign 4 (IVarAccess 2 [2]),IVarAssign 3 (IVarAccess 2 [3])] (IReturn (IVar 4)))]))),IFunction ("Prelude",">>=",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Monad",0) 4 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 2 [0]),IVarAssign 5 (IVarAccess 2 [1]),IVarAssign 4 (IVarAccess 2 [2]),IVarAssign 3 (IVarAccess 2 [3])] (IReturn (IVar 3)))]))),IFunction ("Prelude","liftM",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 6 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 7 (IFPCall ("Prelude",".",0) 1 [IVar 6,IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 4,IVar 7])))),IFunction ("Prelude","liftM2._#lambda460._#lambda462",0) 4 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude","return",0) [IVar 3]),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 4,IVar 2,IVar 5])] (IReturn (IFCall ("Prelude","apply",0) [IVar 6,IVar 7])))),IFunction ("Prelude","liftM2._#lambda460",0) 4 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 7 (IFPCall ("Prelude","liftM2._#lambda460._#lambda462",0) 1 [IVar 5,IVar 2,IVar 4])] (IReturn (IFCall ("Prelude","apply",0) [IVar 6,IVar 3,IVar 7])))),IFunction ("Prelude","liftM2",0) 4 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 7 (IFPCall ("Prelude","liftM2._#lambda460",0) 1 [IVar 2,IVar 5,IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 6,IVar 4,IVar 7])))),IFunction ("Prelude","foldM._#lambda457",0) 4 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3])] (IReturn (IFCall ("Prelude","foldM",0) [IVar 3,IVar 4,IVar 5,IVar 2])))),IFunction ("Prelude","sequence_",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude",">>",0) [IVar 2]),IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 6 (ICCall ("Prelude","()",0) []),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 5,IVar 6])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 7,IVar 3])))),IFunction ("Prelude","mapM_",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>",0) [IVar 2]),IVarAssign 6 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 7 (ICCall ("Prelude","()",0) []),IVarAssign 8 (IFCall ("Prelude","apply",0) [IVar 6,IVar 7]),IVarAssign 9 (IFPCall ("Prelude","map_mkc",0) 2 [IVar 3,IVar 5])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 9,IVar 8,IVar 4])))),IFunction ("Prelude","forM_",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>",0) [IVar 2]),IVarAssign 6 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 7 (ICCall ("Prelude","()",0) []),IVarAssign 8 (IFCall ("Prelude","apply",0) [IVar 6,IVar 7]),IVarAssign 9 (IFPCall ("Prelude","map_mkc",0) 2 [IVar 4,IVar 5])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 9,IVar 8,IVar 3])))),IFunction ("Prelude","sequence._#lambda454._#lambda455._#lambda456",0) 3 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 3]),IVarAssign 6 (ICCall ("Prelude",":",0) [IVar 2,IVar 4])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 6])))),IFunction ("Prelude","sequence._#lambda454._#lambda455",0) 3 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 6 (IFPCall ("Prelude","sequence._#lambda454._#lambda455._#lambda456",0) 1 [IVar 4,IVar 2])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 3,IVar 6])))),IFunction ("Prelude","sequence._#lambda454",0) 3 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 6 (IFPCall ("Prelude","sequence._#lambda454._#lambda455",0) 1 [IVar 2,IVar 4])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 3,IVar 6])))),IFunction ("Prelude","sequence",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 5 (ICCall ("Prelude","[]",0) []),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 4,IVar 5]),IVarAssign 7 (IFPCall ("Prelude","sequence._#lambda454",0) 2 [IVar 2])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 7,IVar 6,IVar 3])))),IFunction ("Prelude","mapM",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 5,IVar 6]),IVarAssign 8 (IFPCall ("Prelude","mapM#P12",0) 2 [IVar 2,IVar 3])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 8,IVar 7,IVar 4])))),IFunction ("Prelude","mapM#P12",0) 4 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 3,IVar 4]),IVarAssign 7 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 8 (IFPCall ("Prelude","sequence._#lambda454._#lambda455",0) 1 [IVar 2,IVar 5])] (IReturn (IFCall ("Prelude","apply",0) [IVar 7,IVar 6,IVar 8])))),IFunction ("Prelude","forM",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","return",0) [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 5,IVar 6]),IVarAssign 8 (IFPCall ("Prelude","forM#P13",0) 2 [IVar 2,IVar 4])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 8,IVar 7,IVar 3])))),IFunction ("Prelude","forM#P13",0) 4 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 3,IVar 4]),IVarAssign 7 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 8 (IFPCall ("Prelude","sequence._#lambda454._#lambda455",0) 1 [IVar 2,IVar 5])] (IReturn (IFCall ("Prelude","apply",0) [IVar 7,IVar 6,IVar 8])))),IFunction ("Prelude",">>$._#lambda283",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (IReturn (IVar 2)))),IFunction ("Prelude","returnIO",0) 1 Private [] (IExternal "Prelude.returnIO"),IFunction ("Prelude",">>=$",0) 2 Private [] (IExternal "Prelude.>>=$"),IFunction ("Prelude","_impl#==#Prelude.Eq#Prelude.IOError",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 12] [IVarAssign 12 (IVarAccess 2 [0])] (ICaseCons 3 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 14 (IVarAccess 3 [0]),IVarAssign 15 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 16 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 17 (ICCall ("Prelude","_Dict#Eq",0) [IVar 15,IVar 16])] (IReturn (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 17,IVar 12,IVar 14]))),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 19] [IVarAssign 19 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 13] [IVarAssign 13 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 18] [IVarAssign 18 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) [])))])),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 28] [IVarAssign 28 (IVarAccess 2 [0])] (ICaseCons 3 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 30] [IVarAssign 30 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 32,IVarDecl 33,IVarDecl 34,IVarDecl 35] [IVarAssign 32 (IVarAccess 3 [0]),IVarAssign 33 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 34 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 35 (ICCall ("Prelude","_Dict#Eq",0) [IVar 33,IVar 34])] (IReturn (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 35,IVar 28,IVar 32]))),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 29] [IVarAssign 29 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 31] [IVarAssign 31 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) [])))])),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 2 [0])] (ICaseCons 3 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 11] [IVarAssign 11 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 5 (IVarAccess 3 [0]),IVarAssign 6 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 7 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 8 (ICCall ("Prelude","_Dict#Eq",0) [IVar 6,IVar 7])] (IReturn (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 8,IVar 4,IVar 5]))),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 10] [IVarAssign 10 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) [])))])),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 20] [IVarAssign 20 (IVarAccess 2 [0])] (ICaseCons 3 [IConsBranch ("Prelude","UserError",0) 1 (IBlock [IVarDecl 22] [IVarAssign 22 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","NondetError",1) 1 (IBlock [IVarDecl 27] [IVarAssign 27 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","IOError",2) 1 (IBlock [IVarDecl 21] [IVarAssign 21 (IVarAccess 3 [0])] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","FailError",3) 1 (IBlock [IVarDecl 23,IVarDecl 24,IVarDecl 25,IVarDecl 26] [IVarAssign 23 (IVarAccess 3 [0]),IVarAssign 24 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 25 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 26 (ICCall ("Prelude","_Dict#Eq",0) [IVar 24,IVar 25])] (IReturn (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 26,IVar 20,IVar 23])))]))]))),IFunction ("Prelude","_inst#Prelude.Eq#Prelude.IOError",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.IOError",0) 2 []),IVarAssign 3 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.IOError",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Eq",0) [IVar 3,IVar 2])))),IFunction ("Prelude","_impl#fail#Prelude.Monad#[]",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (IReturn (ICCall ("Prelude","[]",0) [])))),IFunction ("Prelude","_impl#return#Prelude.Monad#[]",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 2,IVar 3])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#[]._#lambda184#P14",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 3,IVar 4])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#[]",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","_impl#>>=#Prelude.Monad#[]#P15",0) 3 [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","concatMap#P2",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 4,IVar 5,IVar 2])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#[]#P15",0) 4 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 2,IVar 4]),IVarAssign 7 (IFPCall ("Prelude","_impl#>>=#Prelude.Monad#[]#P15#P16",0) 2 [IVar 3])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 7,IVar 5,IVar 6])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#[]#P15#P16",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 3,IVar 4])))),IFunction ("Prelude","_impl#fail#Prelude.Monad#Prelude.Maybe",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (IReturn (ICCall ("Prelude","Nothing",0) [])))),IFunction ("Prelude","_impl#return#Prelude.Monad#Prelude.Maybe",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (IReturn (ICCall ("Prelude","Just",0) [IVar 2])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#Prelude.Maybe",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (IVar 2))),IConsBranch ("Prelude","Just",1) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 2 [0])] (IReturn (IFCall ("Prelude","apply",0) [IVar 3,IVar 4])))]))),IFunction ("Prelude","_impl#return#Prelude.Monad#Prelude.IO",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 2])))),IFunction ("Prelude","sequenceIO._#lambda292._#lambda294",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("Prelude",":",0) [IVar 2,IVar 3])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 4])))),IFunction ("Prelude","done",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 2])))),IFunction ("Prelude","when",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 4])))]))),IFunction ("Prelude","unless",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 4]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))),IFunction ("Prelude","doSolve",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 3] [IVarAssign 3 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 3]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","failed",0) [])))]))),IFunction ("Prelude","_impl#>>#Prelude.Monad#Prelude.IO",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 3])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 2,IVar 4])))),IFunction ("Prelude","sequenceIO_",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (ICCall ("Prelude","()",0) []),IVarAssign 4 (IFCall ("Prelude","returnIO",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","_impl#>>#Prelude.Monad#Prelude.IO",0) 2 [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 4,IVar 2])))),IFunction ("Prelude","mapIO_",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("Prelude","()",0) []),IVarAssign 5 (IFCall ("Prelude","returnIO",0) [IVar 4]),IVarAssign 6 (IFPCall ("Prelude","mapIO_#P17",0) 2 [IVar 2])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 6,IVar 5,IVar 3])))),IFunction ("Prelude","mapIO_#P17",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 6 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 4])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 5,IVar 6])))),IFunction ("Prelude","forIO_",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("Prelude","()",0) []),IVarAssign 5 (IFCall ("Prelude","returnIO",0) [IVar 4]),IVarAssign 6 (IFPCall ("Prelude","forIO_#P18",0) 2 [IVar 3])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 6,IVar 5,IVar 2])))),IFunction ("Prelude","forIO_#P18",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 6 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 4])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 5,IVar 6])))),IFunction ("Prelude","putStrLn",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","putStr",0) [IVar 2]),IVarAssign 4 (IFCall ("Prelude","prim_putChar",0) [ILit (IChar '\n')]),IVarAssign 5 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 4])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 3,IVar 5])))),IFunction ("Prelude","print",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","show",0) [IVar 2]),IVarAssign 5 (IFCall ("Prelude","apply",0) [IVar 4,IVar 3]),IVarAssign 6 (IFCall ("Prelude","putStr",0) [IVar 5]),IVarAssign 7 (IFCall ("Prelude","prim_putChar",0) [ILit (IChar '\n')]),IVarAssign 8 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 7])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 6,IVar 8])))),IFunction ("Prelude","_impl#>>=#Prelude.Monad#Prelude.IO",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 2,IVar 3])))),IFunction ("Prelude","liftIO",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","liftIO#P19",0) 1 [IVar 2])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 3,IVar 4])))),IFunction ("Prelude","liftIO#P19",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 4])))),IFunction ("Prelude","foldIO._#lambda296",0) 3 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (IReturn (IFCall ("Prelude","foldIO",0) [IVar 3,IVar 4,IVar 2])))),IFunction ("Prelude","sequenceIO._#lambda292",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","sequenceIO",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","sequenceIO._#lambda292._#lambda294",0) 1 [IVar 3])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 4,IVar 5])))),IFunction ("Prelude","mapIO",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","map_mkc",0) 3 [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","id",0) 1 []),IVarAssign 6 (IFCall ("Prelude","build_fold",0) [IVar 4,IVar 5,IVar 3])] (IReturn (IFCall ("Prelude","sequenceIO",0) [IVar 6])))),IFunction ("Prelude","forIO",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","map_mkc",0) 3 [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","id",0) 1 []),IVarAssign 6 (IFCall ("Prelude","build_fold",0) [IVar 4,IVar 5,IVar 2])] (IReturn (IFCall ("Prelude","sequenceIO",0) [IVar 6])))),IFunction ("Prelude","getLine",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFCall ("Prelude","getChar",0) []),IVarAssign 3 (IFPCall ("Prelude","getLine._#lambda285",0) 1 [])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 2,IVar 3])))),IFunction ("Prelude","_def#fail#Prelude.Monad",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","prim_error",0) 1 [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 4,IVar 3])))),IFunction ("Prelude","_impl#fail#Prelude.Monad#Prelude.IO",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","prim_error",0) 1 [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 3,IVar 2])))),IFunction ("Prelude","_def#>>#Prelude.Monad._#lambda183",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (IReturn (IVar 2)))),IFunction ("Prelude","_def#>>#Prelude.Monad",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 6 (IFPCall ("Prelude","_def#>>#Prelude.Monad._#lambda183",0) 1 [IVar 4])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 3,IVar 6])))),IFunction ("Prelude","_impl#>>#Prelude.Monad#[]",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","_inst#Prelude.Monad#[]",0) []),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 4]),IVarAssign 6 (IFPCall ("Prelude","_def#>>#Prelude.Monad._#lambda183",0) 1 [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 2,IVar 6])))),IFunction ("Prelude","_impl#>>#Prelude.Monad#Prelude.Maybe",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","_inst#Prelude.Monad#Prelude.Maybe",0) []),IVarAssign 5 (IFCall ("Prelude",">>=",0) [IVar 4]),IVarAssign 6 (IFPCall ("Prelude","_def#>>#Prelude.Monad._#lambda183",0) 1 [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 5,IVar 2,IVar 6])))),IFunction ("Prelude","_impl#fmap#Prelude.Functor#[]",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","map_mkc",0) 3 [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_inst#Prelude.Functor#[]",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IFPCall ("Prelude","_impl#fmap#Prelude.Functor#[]",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Functor",0) [IVar 2])))),IFunction ("Prelude","_impl#showList#Prelude.Show#Prelude.IOError",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (IFPCall ("Prelude","_def#showList#Prelude.Show#P49",0) 2 [IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 6 (IVarAccess 2 [0]),IVarAssign 5 (IVarAccess 2 [1]),IVarAssign 7 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 8 (IFPCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError",0) 1 [IVar 7]),IVarAssign 9 (IFCall ("Prelude","showList'.showl.429",0) [IVar 3,IVar 8,IVar 6]),IVarAssign 10 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 11 (IFCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError",0) [IVar 10,IVar 5]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 11,IVar 9]),IVarAssign 13 (ICCall ("","char",0) [ILit (IChar '[')])] (IReturn (ICCall ("Prelude",":",0) [IVar 13,IVar 12])))]))),IFunction ("Prelude","_impl#show#Prelude.Show#Prelude.IOError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 4 (IFCall ("Prelude","_impl#showsPrec#Prelude.Show#Prelude.IOError",0) [IVar 3,IVar 2]),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","apply",0) [IVar 4,IVar 5])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.IOError",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.IOError",0) 1 []),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.IOError",0) 2 []),IVarAssign 5 (ICCall ("Prelude","_Dict#Read",0) [IVar 4,IVar 3])] (IReturn (IFCall ("Prelude","_def#readList#Prelude.Read",0) [IVar 5,IVar 2])))),IFunction ("Prelude","foldM",0) 4 Public [3] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 6] [IVarAssign 6 (IFCall ("Prelude","return",0) [IVar 2])] (IReturn (IFCall ("Prelude","apply",0) [IVar 6,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11] [IVarAssign 8 (IVarAccess 5 [0]),IVarAssign 7 (IVarAccess 5 [1]),IVarAssign 9 (IFCall ("Prelude",">>=",0) [IVar 2]),IVarAssign 10 (IFCall ("Prelude","apply",0) [IVar 3,IVar 4,IVar 7]),IVarAssign 11 (IFPCall ("Prelude","foldM._#lambda457",0) 1 [IVar 8,IVar 2,IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 9,IVar 10,IVar 11])))]))),IFunction ("Prelude","_impl#/=#Prelude.Eq#Prelude.IOError",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl (-4)] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign (-4) (IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.IOError",0) [IVar 2,IVar 3])] (ICaseCons (-4) [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))),IFunction ("Prelude","putStr",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 3] [IVarAssign 3 (ICCall ("Prelude","()",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 5 (IVarAccess 2 [0]),IVarAssign 4 (IVarAccess 2 [1]),IVarAssign 6 (IFCall ("Prelude","putChar",0) [IVar 4]),IVarAssign 7 (IFCall ("Prelude","putStr",0) [IVar 5]),IVarAssign 8 (IFPCall ("Prelude",">>$._#lambda283",0) 1 [IVar 7])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 6,IVar 8])))]))),IFunction ("Prelude","foldIO",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 6 (IVarAccess 4 [0]),IVarAssign 5 (IVarAccess 4 [1]),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3,IVar 5]),IVarAssign 8 (IFPCall ("Prelude","foldIO._#lambda296",0) 1 [IVar 6,IVar 2])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 7,IVar 8])))]))),IFunction ("Prelude","sequenceIO",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 3] [IVarAssign 3 (IVar 2)] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 5 (IVarAccess 2 [0]),IVarAssign 4 (IVarAccess 2 [1]),IVarAssign 6 (IFPCall ("Prelude","sequenceIO._#lambda292",0) 1 [IVar 5])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 4,IVar 6])))]))),IFunction ("Prelude","getLine._#lambda285",0) 1 Private [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 2 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 3,ILit (IChar '\n')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 4]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 5 (IFCall ("Prelude","getChar",0) []),IVarAssign 6 (IFPCall ("Prelude","getLine._#lambda285",0) 1 []),IVarAssign 7 (IFCall ("Prelude",">>=$",0) [IVar 5,IVar 6]),IVarAssign 8 (IFPCall ("Prelude","getLine._#lambda285#P20",0) 1 [IVar 3])] (IReturn (IFCall ("Prelude",">>=$",0) [IVar 7,IVar 8])))]))]))),IFunction ("Prelude","getLine._#lambda285#P20",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (ICCall ("","char",0) [IVar 2]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 4,IVar 3])] (IReturn (IFCall ("Prelude","returnIO",0) [IVar 5])))),IFunction ("Prelude","_inst#Prelude.Monad#Prelude.IO",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IFPCall ("Prelude","_impl#>>=#Prelude.Monad#Prelude.IO",0) 2 []),IVarAssign 3 (IFPCall ("Prelude","_impl#>>#Prelude.Monad#Prelude.IO",0) 2 []),IVarAssign 4 (IFPCall ("Prelude","_impl#return#Prelude.Monad#Prelude.IO",0) 1 []),IVarAssign 5 (IFPCall ("Prelude","_impl#fail#Prelude.Monad#Prelude.IO",0) 1 [])] (IReturn (ICCall ("Prelude","_Dict#Monad",0) [IVar 2,IVar 3,IVar 4,IVar 5])))),IFunction ("Prelude","_inst#Prelude.Monad#[]",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IFPCall ("Prelude","_impl#>>=#Prelude.Monad#[]",0) 2 []),IVarAssign 3 (IFPCall ("Prelude","_impl#>>#Prelude.Monad#[]",0) 2 []),IVarAssign 4 (IFPCall ("Prelude","_impl#return#Prelude.Monad#[]",0) 1 []),IVarAssign 5 (IFPCall ("Prelude","_impl#fail#Prelude.Monad#[]",0) 1 [])] (IReturn (ICCall ("Prelude","_Dict#Monad",0) [IVar 2,IVar 3,IVar 4,IVar 5])))),IFunction ("Prelude","_inst#Prelude.Monad#Prelude.Maybe",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IFPCall ("Prelude","_impl#>>=#Prelude.Monad#Prelude.Maybe",0) 2 []),IVarAssign 3 (IFPCall ("Prelude","_impl#>>#Prelude.Monad#Prelude.Maybe",0) 2 []),IVarAssign 4 (IFPCall ("Prelude","_impl#return#Prelude.Monad#Prelude.Maybe",0) 1 []),IVarAssign 5 (IFPCall ("Prelude","_impl#fail#Prelude.Monad#Prelude.Maybe",0) 1 [])] (IReturn (ICCall ("Prelude","_Dict#Monad",0) [IVar 2,IVar 3,IVar 4,IVar 5]))))]