Prog "letrec" ["Prelude"] [] [Func ("letrec","t") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) (Rule [1] (Let [(2,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","_impl#*#Prelude.Num#Prelude.Int") [Var 1],Var 3]),(3,Comb ConsCall ("Prelude",":") [Lit (Intc 1),Var 2])] (Var 3))),Func ("letrec","main") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("Prelude","take") [Lit (Intc 5),Comb FuncCall ("letrec","t") [Lit (Intc 2)]]))] []