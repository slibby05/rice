Prog "simple" ["Prelude"] [] [Func ("simple","myTrue") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb ConsCall ("Prelude","True") [])),Func ("simple","myOr") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Var 2)])),Func ("simple","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("simple","myOr") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude","False") []]))] []