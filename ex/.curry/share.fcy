Prog "share" ["Prelude"] [] [Func ("share","coin") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 0)],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 1)]])),Func ("share","shared") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TVar 0])) (Rule [1] (Let [(2,Comb FuncCall ("share","coin") [Var 1])] (Comb ConsCall ("Prelude","(,)") [Var 2,Var 2]))),Func ("share","unshar") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 1]) (TCons ("Prelude","(,)") [TVar 0,TVar 1]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("share","coin") [Var 1],Comb FuncCall ("share","coin") [Var 2]])),Func ("share","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#(,)") [Comb FuncCall ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Comb FuncCall ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Comb FuncCall ("share","shared") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") []],Comb FuncCall ("share","unshar") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") []]]))] []