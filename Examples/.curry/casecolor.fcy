Prog "casecolor" ["Prelude"] [Type ("casecolor","Color") Public [] [Cons ("casecolor","Red") 0 Public [],Cons ("casecolor","Green") 0 Public [],Cons ("casecolor","Blue") 0 Public []]] [Func ("casecolor","_inst#Prelude.Show#casecolor.Color") 0 Public (TCons ("Prelude","_Dict#Show") [TCons ("casecolor","Color") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("casecolor","_impl#show#Prelude.Show#casecolor.Color") [],Comb (FuncPartCall 2) ("casecolor","_impl#showsPrec#Prelude.Show#casecolor.Color") [],Comb FuncCall ("casecolor","_impl#showList#Prelude.Show#casecolor.Color") []])),Func ("casecolor","_impl#show#Prelude.Show#casecolor.Color") 0 Public (FuncType (TCons ("casecolor","Color") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb FuncCall ("casecolor","_inst#Prelude.Show#casecolor.Color") []])),Func ("casecolor","_impl#showsPrec#Prelude.Show#casecolor.Color") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("casecolor","Color") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("casecolor","Red") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'R'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'd'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("casecolor","Green") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc 'r'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude",":") [Lit (Charc 'n'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("casecolor","Blue") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude",":") [Lit (Charc 'l'),Comb ConsCall ("Prelude",":") [Lit (Charc 'u'),Comb ConsCall ("Prelude",":") [Lit (Charc 'e'),Comb ConsCall ("Prelude","[]") []]]]]])])),Func ("casecolor","_impl#showList#Prelude.Show#casecolor.Color") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("casecolor","Color") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#showList#Prelude.Show") [Comb FuncCall ("casecolor","_inst#Prelude.Show#casecolor.Color") []])),Func ("casecolor","_inst#Prelude.Eq#casecolor.Color") 0 Public (TCons ("Prelude","_Dict#Eq") [TCons ("casecolor","Color") []]) (Rule [] (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("casecolor","_impl#==#Prelude.Eq#casecolor.Color") [],Comb FuncCall ("casecolor","_impl#/=#Prelude.Eq#casecolor.Color") []])),Func ("casecolor","_impl#==#Prelude.Eq#casecolor.Color") 2 Public (FuncType (TCons ("casecolor","Color") []) (FuncType (TCons ("casecolor","Color") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("casecolor","Red") []) (Case Flex (Var 2) [Branch (Pattern ("casecolor","Red") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("casecolor","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("casecolor","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("casecolor","Green") []) (Case Flex (Var 2) [Branch (Pattern ("casecolor","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("casecolor","Green") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("casecolor","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("casecolor","Blue") []) (Case Flex (Var 2) [Branch (Pattern ("casecolor","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("casecolor","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("casecolor","Blue") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("casecolor","_impl#/=#Prelude.Eq#casecolor.Color") 0 Public (FuncType (TCons ("casecolor","Color") []) (FuncType (TCons ("casecolor","Color") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb FuncCall ("casecolor","_inst#Prelude.Eq#casecolor.Color") []])),Func ("casecolor","next") 1 Public (FuncType (TCons ("casecolor","Color") []) (TCons ("casecolor","Color") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("casecolor","Red") []) (Comb ConsCall ("casecolor","Green") []),Branch (Pattern ("casecolor","Green") []) (Comb ConsCall ("casecolor","Blue") [])])),Func ("casecolor","isRed") 1 Public (FuncType (TCons ("casecolor","Color") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Rigid (Comb FuncCall ("casecolor","_impl#==#Prelude.Eq#casecolor.Color") [Var 1,Comb ConsCall ("casecolor","Red") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb ConsCall ("Prelude","True") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])),Func ("casecolor","main") 0 Public (TCons ("Prelude","(,)") [TCons ("Prelude","Bool") [],TCons ("Prelude","Bool") []]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("casecolor","isRed") [Comb ConsCall ("casecolor","Red") []],Comb FuncCall ("casecolor","isRed") [Comb FuncCall ("casecolor","next") [Comb ConsCall ("casecolor","Red") []]]]))] []