AProg "perm" ["Prelude"] [] [AFunc ("perm","perm") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (ARule (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) [(1,TCons ("Prelude","[]") [TVar 0])] (ACase (TCons ("Prelude","[]") [TVar 0]) Flex (AVar (TCons ("Prelude","[]") [TVar 0]) 1) [ABranch (APattern (TCons ("Prelude","[]") [TVar 0]) (("Prelude","[]"),TCons ("Prelude","[]") [TVar 0]) []) (AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude","[]"),TCons ("Prelude","[]") [TVar 0]) []),ABranch (APattern (TCons ("Prelude","[]") [TVar 0]) (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [(2,TVar 0),(3,TCons ("Prelude","[]") [TVar 0])]) (AComb (TCons ("Prelude","[]") [TVar 0]) FuncCall (("perm","insert"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 2,AComb (TCons ("Prelude","[]") [TVar 0]) FuncCall (("perm","perm"),FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) [AVar (TCons ("Prelude","[]") [TVar 0]) 3]])])),AFunc ("perm","insert") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (ARule (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [(1,TVar 0),(2,TCons ("Prelude","[]") [TVar 0])] (ACase (TCons ("Prelude","[]") [TVar 0]) Flex (AVar (TCons ("Prelude","[]") [TVar 0]) 2) [ABranch (APattern (TCons ("Prelude","[]") [TVar 0]) (("Prelude","[]"),TCons ("Prelude","[]") [TVar 0]) []) (AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 1,AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude","[]"),TCons ("Prelude","[]") [TVar 0]) []]),ABranch (APattern (TCons ("Prelude","[]") [TVar 0]) (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [(3,TVar 0),(4,TCons ("Prelude","[]") [TVar 0])]) (AOr (TCons ("Prelude","[]") [TVar 0]) (AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 1,AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 3,AVar (TCons ("Prelude","[]") [TVar 0]) 4]]) (AComb (TCons ("Prelude","[]") [TVar 0]) ConsCall (("Prelude",":"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 3,AComb (TCons ("Prelude","[]") [TVar 0]) FuncCall (("perm","insert"),FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) [AVar (TVar 0) 1,AVar (TCons ("Prelude","[]") [TVar 0]) 4]]))])),AFunc ("perm","main") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (ARule (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) [] (AComb (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) FuncCall (("perm","perm"),FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) [AComb (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) FuncCall (("Prelude","apply"),FuncType (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) [AComb (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) FuncCall (("Prelude","apply"),FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])))) [AComb (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) FuncCall (("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int"),FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) [],ALit (TCons ("Prelude","Int") []) (Intc 1)],ALit (TCons ("Prelude","Int") []) (Intc 8)]]))] []