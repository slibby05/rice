IProg "PreludeRead" ["PreludeBase","PreludeCompare","PreludeNum","PreludeList","PreludeString"] [] [IFunction ("Prelude","_def#readsPrec#Prelude.Read",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 4 (ICCall ("StringConst","No instance or default method for class operation `readsPrec'",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 3,IVar 4])))),IFunction ("Prelude","makeJust",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1]),IVarAssign 5 (ICCall ("Prelude","Just",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readNothing",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 7)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","Nothing",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 7)]),IVarAssign 10 (ICCall ("Prelude","Nothing",0) []),IVarAssign 11 (ICCall ("Prelude","(,)",0) [IVar 10,IVar 9]),IVarAssign 12 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 11,IVar 12]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readFalse",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 5)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","False",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 5)]),IVarAssign 10 (ICCall ("Prelude","False",0) []),IVarAssign 11 (ICCall ("Prelude","(,)",0) [IVar 10,IVar 9]),IVarAssign 12 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 11,IVar 12]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readTrue",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl (-8)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","take#worker",0) [IVar 2,ILit (IInt 4)]),IVarAssign 4 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 5 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Eq",0) [IVar 4,IVar 5]),IVarAssign 7 (ICCall ("StringConst","True",0) []),IVarAssign (-8) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 6,IVar 3,IVar 7])] (ICaseCons (-8) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 9 (IFCall ("Prelude","drop#worker",0) [IVar 2,ILit (IInt 4)]),IVarAssign 10 (ICCall ("Prelude","True",0) []),IVarAssign 11 (ICCall ("Prelude","(,)",0) [IVar 10,IVar 9]),IVarAssign 12 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 11,IVar 12]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","makeRight",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1]),IVarAssign 5 (ICCall ("Prelude","Right",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","makeLeft",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1]),IVarAssign 5 (ICCall ("Prelude","Left",0) [IVar 3])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 5,IVar 4])))]))),IFunction ("Prelude","readDotNat",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 4 (ICCall ("Prelude","[]",0) []),IVarAssign 5 (ICCall ("Prelude","(,)",0) [IVar 3,IVar 4]),IVarAssign 6 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 5,IVar 6]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 9 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 10 (ICCall ("Prelude","[]",0) []),IVarAssign 11 (ICCall ("Prelude",":",0) [IVar 7,IVar 10]),IVarAssign 12 (ICCall ("Prelude","(,)",0) [IVar 9,IVar 11]),IVarAssign 13 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 12,IVar 13]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 16] [IVarAssign 16 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 16,ILit (IChar '.')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 14 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 17,IVarDecl 18] [IVarAssign 17 (IVarAccess 1 [0]),IVarAssign 18 (IFCall ("Prelude","primOrd",0) [IVar 17])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 48),IVar 18]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 19] [IVarAssign 19 (IFCall ("Prelude","primOrd",0) [IVar 17])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 58),IVar 19]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 20,IVarDecl 21,IVarDecl 22,IVarDecl 23,IVarDecl 24,IVarDecl 25,IVarDecl 26] [IVarAssign 20 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 21 (ICCall ("","char",0) [IVar 16]),IVarAssign 22 (ICCall ("","char",0) [IVar 17]),IVarAssign 23 (ICCall ("Prelude",":",0) [IVar 22,IVar 15]),IVarAssign 24 (ICCall ("Prelude",":",0) [IVar 21,IVar 23]),IVarAssign 25 (ICCall ("Prelude","(,)",0) [IVar 20,IVar 24]),IVarAssign 26 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 25,IVar 26]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 27,IVarDecl 28,IVarDecl 29,IVarDecl 30] [IVarAssign 27 (ICCall ("","char",0) [IVar 17]),IVarAssign 28 (ICCall ("Prelude",":",0) [IVar 27,IVar 15]),IVarAssign 29 (IFCall ("Prelude","readDotNat1",0) [IVar 28]),IVarAssign 30 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 29,IVar 30])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 31,IVarDecl 32,IVarDecl 33,IVarDecl 34,IVarDecl 35,IVarDecl 36,IVarDecl 37] [IVarAssign 31 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 32 (ICCall ("","char",0) [IVar 16]),IVarAssign 33 (ICCall ("","char",0) [IVar 17]),IVarAssign 34 (ICCall ("Prelude",":",0) [IVar 33,IVar 15]),IVarAssign 35 (ICCall ("Prelude",":",0) [IVar 32,IVar 34]),IVarAssign 36 (ICCall ("Prelude","(,)",0) [IVar 31,IVar 35]),IVarAssign 37 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 36,IVar 37])))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 38,IVarDecl 39,IVarDecl 40,IVarDecl 41,IVarDecl 42,IVarDecl 43] [IVarAssign 38 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 39 (ICCall ("","char",0) [IVar 16]),IVarAssign 40 (ICCall ("Prelude",":",0) [IVar 14,IVar 15]),IVarAssign 41 (ICCall ("Prelude",":",0) [IVar 39,IVar 40]),IVarAssign 42 (ICCall ("Prelude","(,)",0) [IVar 38,IVar 41]),IVarAssign 43 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 42,IVar 43])))]))]))]))]))),IFunction ("Prelude","readCharLiteral",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1]),IVarAssign 5 (ICCall ("Prelude","(,)",0) [IVar 3,IVar 4]),IVarAssign 6 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 5,IVar 6])))]))),IFunction ("Prelude","readNatLiteral",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (ICaseCons 3 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 5,ILit (IChar '-')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 9 (IFCall ("Prelude","primOrd",0) [IVar 8])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 48),IVar 9]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 58),IVar 9]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl (-13)] [IVarAssign 10 (ICCall ("","char",0) [IVar 8]),IVarAssign 11 (ICCall ("Prelude",":",0) [IVar 10,IVar 7]),IVarAssign 12 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign (-13) (IFCall ("Prelude","readNat",0) [IVar 11,IVar 12])] (ICaseCons (-13) [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1]),IVarAssign 16 (IFCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Int",0) [IVar 14]),IVarAssign 17 (ICCall ("Prelude","(,)",0) [IVar 16,IVar 15]),IVarAssign 18 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 17,IVar 18])))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 19] [IVarAssign 19 (IFCall ("Prelude","primOrd",0) [IVar 5])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 48),IVar 19]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 58),IVar 19]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 20,IVarDecl 21,IVarDecl 22,IVarDecl 23,IVarDecl 24] [IVarAssign 20 (ICCall ("","char",0) [IVar 5]),IVarAssign 21 (ICCall ("Prelude",":",0) [IVar 20,IVar 4]),IVarAssign 22 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 23 (IFCall ("Prelude","readNat",0) [IVar 21,IVar 22]),IVarAssign 24 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 23,IVar 24])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))]))]))),IFunction ("Prelude","readENat",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 4 (ICCall ("Prelude","[]",0) []),IVarAssign 5 (ICCall ("Prelude","(,)",0) [IVar 3,IVar 4]),IVarAssign 6 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 5,IVar 6]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar 'e')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","readNatLiteral",0) [IVar 8]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar 'E')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","readNatLiteral",0) [IVar 8]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14] [IVarAssign 10 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 11 (ICCall ("","char",0) [IVar 9]),IVarAssign 12 (ICCall ("Prelude",":",0) [IVar 11,IVar 8]),IVarAssign 13 (ICCall ("Prelude","(,)",0) [IVar 10,IVar 12]),IVarAssign 14 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 13,IVar 14])))]))]))]))]))),IFunction ("Prelude","readPosFloat",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl (-6)] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1]),IVarAssign 5 (ICCall ("Prelude",":",0) [IVar 3,IVar 4]),IVarAssign (-6) (IFCall ("Prelude","readNatLiteral",0) [IVar 5])] (ICaseCons (-6) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl (-11)] [IVarAssign (-11) (IFCall ("Prelude","readDotNat",0) [IVar 10])] (ICaseCons (-11) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 12,IVarDecl 13] [IVarAssign 13 (IVarAccess 1 [0]),IVarAssign 12 (IVarAccess 1 [1])] (ICaseCons 12 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (ICaseCons 13 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (ICaseCons 15 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 16,IVarDecl 17,IVarDecl 18,IVarDecl 19,IVarDecl 20,IVarDecl 21,IVarDecl 22] [IVarAssign 16 (IFCall ("Prelude","readPosFloat#A0",0) [IVar 9,IVar 14]),IVarAssign 17 (ICCall ("","float",0) [ILit (IFloat 10.0)]),IVarAssign 18 (IFCall ("Prelude","powaux#worker",0) [IVar 17,ILit (IFloat 1.0),ILit (IInt 0)]),IVarAssign 19 (IFCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) [IVar 16,IVar 18]),IVarAssign 20 (ICCall ("Prelude","[]",0) []),IVarAssign 21 (ICCall ("Prelude","(,)",0) [IVar 19,IVar 20]),IVarAssign 22 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 21,IVar 22]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 23,IVarDecl 24] [IVarAssign 24 (IVarAccess 1 [0]),IVarAssign 23 (IVarAccess 1 [1])] (ICaseCons 23 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 25] [IVarAssign 25 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 25,ILit (IChar 'e')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl (-26)] [IVarAssign (-26) (IFCall ("Prelude","readNatLiteral",0) [IVar 24])] (ICaseCons (-26) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 27,IVarDecl 28] [IVarAssign 28 (IVarAccess 1 [0]),IVarAssign 27 (IVarAccess 1 [1])] (ICaseCons 27 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 29,IVarDecl 30] [IVarAssign 30 (IVarAccess 1 [0]),IVarAssign 29 (IVarAccess 1 [1])] (ICaseCons 28 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 31,IVarDecl 32,IVarDecl 33,IVarDecl 34,IVarDecl 35] [IVarAssign 31 (IFCall ("Prelude","readPosFloat#A2",0) [IVar 9,IVar 14]),IVarAssign 32 (IFCall ("Prelude","readPosFloat#A1",0) [IVar 29]),IVarAssign 33 (IFCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) [IVar 31,IVar 32]),IVarAssign 34 (ICCall ("Prelude","(,)",0) [IVar 33,IVar 30]),IVarAssign 35 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 34,IVar 35]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 36,IVarDecl 37] [IVarAssign 37 (IVarAccess 1 [0]),IVarAssign 36 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 25,ILit (IChar 'E')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl (-38)] [IVarAssign (-38) (IFCall ("Prelude","readNatLiteral",0) [IVar 24])] (ICaseCons (-38) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 39,IVarDecl 40] [IVarAssign 40 (IVarAccess 1 [0]),IVarAssign 39 (IVarAccess 1 [1])] (ICaseCons 39 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 41,IVarDecl 42] [IVarAssign 42 (IVarAccess 1 [0]),IVarAssign 41 (IVarAccess 1 [1])] (ICaseCons 40 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 43,IVarDecl 44,IVarDecl 45,IVarDecl 46,IVarDecl 47] [IVarAssign 43 (IFCall ("Prelude","readPosFloat#A4",0) [IVar 9,IVar 14]),IVarAssign 44 (IFCall ("Prelude","readPosFloat#A3",0) [IVar 41]),IVarAssign 45 (IFCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) [IVar 43,IVar 44]),IVarAssign 46 (ICCall ("Prelude","(,)",0) [IVar 45,IVar 42]),IVarAssign 47 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 46,IVar 47]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 48,IVarDecl 49] [IVarAssign 49 (IVarAccess 1 [0]),IVarAssign 48 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 50,IVarDecl 51,IVarDecl 52,IVarDecl 53,IVarDecl 54,IVarDecl 55,IVarDecl 56,IVarDecl 57] [IVarAssign 50 (IFCall ("Prelude","readPosFloat#A5",0) [IVar 9,IVar 14]),IVarAssign 51 (ICCall ("","float",0) [ILit (IFloat 10.0)]),IVarAssign 52 (IFCall ("Prelude","powaux#worker",0) [IVar 51,ILit (IFloat 1.0),ILit (IInt 0)]),IVarAssign 53 (IFCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) [IVar 50,IVar 52]),IVarAssign 54 (ICCall ("","char",0) [IVar 25]),IVarAssign 55 (ICCall ("Prelude",":",0) [IVar 54,IVar 24]),IVarAssign 56 (ICCall ("Prelude","(,)",0) [IVar 53,IVar 55]),IVarAssign 57 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 56,IVar 57])))]))]))]))])),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 58,IVarDecl 59] [IVarAssign 59 (IVarAccess 1 [0]),IVarAssign 58 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 60,IVarDecl 61] [IVarAssign 61 (IVarAccess 1 [0]),IVarAssign 60 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))]))]))),IFunction ("Prelude","readPosFloat#A5",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0])] (ICaseCons 3 [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 6 (IFCall ("Prelude","primI2F",0) [IVar 4]),IVarAssign 7 (IFCall ("Prelude","primAddFloat",0) [IVar 6,IVar 5])] (IReturn (ICCall ("","float",0) [IVar 7])))]))]))),IFunction ("Prelude","readPosFloat#A4",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0])] (ICaseCons 3 [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 6 (IFCall ("Prelude","primI2F",0) [IVar 4]),IVarAssign 7 (IFCall ("Prelude","primAddFloat",0) [IVar 6,IVar 5])] (IReturn (ICCall ("","float",0) [IVar 7])))]))]))),IFunction ("Prelude","readPosFloat#A3",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 0),IVar 3]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("","float",0) [ILit (IFloat 10.0)])] (IReturn (IFCall ("Prelude","powaux#worker",0) [IVar 4,ILit (IFloat 1.0),IVar 3]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl (-7)] [IVarAssign 5 (IFCall ("Prelude","primSubInt",0) [ILit (IInt 0),IVar 3]),IVarAssign 6 (ICCall ("","float",0) [ILit (IFloat 10.0)]),IVarAssign (-7) (IFCall ("Prelude","powaux#worker",0) [IVar 6,ILit (IFloat 1.0),IVar 5])] (ICaseCons (-7) [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 9 (IFCall ("Prelude","primDivFloat",0) [ILit (IFloat 1.0),IVar 8])] (IReturn (ICCall ("","float",0) [IVar 9])))]))]))]))),IFunction ("Prelude","readPosFloat#A2",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0])] (ICaseCons 3 [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 6 (IFCall ("Prelude","primI2F",0) [IVar 4]),IVarAssign 7 (IFCall ("Prelude","primAddFloat",0) [IVar 6,IVar 5])] (IReturn (ICCall ("","float",0) [IVar 7])))]))]))),IFunction ("Prelude","readPosFloat#A1",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 0),IVar 3]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("","float",0) [ILit (IFloat 10.0)])] (IReturn (IFCall ("Prelude","powaux#worker",0) [IVar 4,ILit (IFloat 1.0),IVar 3]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl (-7)] [IVarAssign 5 (IFCall ("Prelude","primSubInt",0) [ILit (IInt 0),IVar 3]),IVarAssign 6 (ICCall ("","float",0) [ILit (IFloat 10.0)]),IVarAssign (-7) (IFCall ("Prelude","powaux#worker",0) [IVar 6,ILit (IFloat 1.0),IVar 5])] (ICaseCons (-7) [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 9 (IFCall ("Prelude","primDivFloat",0) [ILit (IFloat 1.0),IVar 8])] (IReturn (ICCall ("","float",0) [IVar 9])))]))]))]))),IFunction ("Prelude","readPosFloat#A0",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0])] (ICaseCons 3 [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 6 (IFCall ("Prelude","primI2F",0) [IVar 4]),IVarAssign 7 (IFCall ("Prelude","primAddFloat",0) [IVar 6,IVar 5])] (IReturn (ICCall ("","float",0) [IVar 7])))]))]))),IFunction ("Prelude","readFloatLiteral",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (ICaseCons 3 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 5,ILit (IChar '-')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl (-6)] [IVarAssign (-6) (IFCall ("Prelude","readPosFloat",0) [IVar 4])] (ICaseCons (-6) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 11 (IFCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Float",0) [IVar 9]),IVarAssign 12 (ICCall ("Prelude","(,)",0) [IVar 11,IVar 10]),IVarAssign 13 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 12,IVar 13]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 16,IVarDecl 17] [IVarAssign 16 (ICCall ("","char",0) [IVar 5]),IVarAssign 17 (ICCall ("Prelude",":",0) [IVar 16,IVar 4])] (IReturn (IFCall ("Prelude","readPosFloat",0) [IVar 17])))]))]))]))),IFunction ("Prelude","readStringLiteral",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (ICaseCons 3 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 5,ILit (IChar '"')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 6,IVarDecl (-7)] [IVarAssign 6 (IFPCall ("Prelude","readStringLiteral#P1",0) 1 []),IVarAssign (-7) (IFCall ("Prelude","span",0) [IVar 6,IVar 4])] (ICaseCons (-7) [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1]),IVarAssign 10 (IFPCall ("Prelude","readStringLiteral#P0",0) 2 [IVar 8]),IVarAssign 11 (IFCall ("Prelude","build",0) [IVar 10]),IVarAssign 12 (IFCall ("Prelude","tail",0) [IVar 9]),IVarAssign 13 (ICCall ("","char",0) [ILit (IChar '"')]),IVarAssign 14 (ICCall ("Prelude",":",0) [IVar 13,IVar 11]),IVarAssign 15 (ICCall ("Prelude","(,)",0) [IVar 14,IVar 12]),IVarAssign 16 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 15,IVar 16])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 17,IVarDecl 18,IVarDecl 19,IVarDecl 20,IVarDecl 21] [IVarAssign 17 (ICCall ("Prelude","[]",0) []),IVarAssign 18 (ICCall ("","char",0) [IVar 5]),IVarAssign 19 (ICCall ("Prelude",":",0) [IVar 18,IVar 4]),IVarAssign 20 (ICCall ("Prelude","(,)",0) [IVar 17,IVar 19]),IVarAssign 21 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 20,IVar 21])))]))]))]))),IFunction ("Prelude","readStringLiteral#P1",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [ILit (IChar '"'),IVar 3]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","readStringLiteral#P0",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (ICCall ("StringConst","\"",0) []),IVarAssign 6 (IFCall ("Prelude","foldr",0) [IVar 3,IVar 4,IVar 5])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 3,IVar 6,IVar 2])))),IFunction ("Prelude","readList",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Read",0) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))),IFunction ("Prelude","readsPrec",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Read",0) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (IReturn (IVar 3)))]))),IFunction ("Prelude","readSigned.read'.490._#lambda355._#lambda359",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (IFCall ("Prelude","readSigned.read'.490._#lambda355._#lambda359#A6",0) [IVar 2]),IVarAssign 8 (IFCall ("Prelude","negate",0) [IVar 7]),IVarAssign 9 (IFCall ("Prelude","apply",0) [IVar 8,IVar 5]),IVarAssign 10 (ICCall ("Prelude","(,)",0) [IVar 9,IVar 6])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 4])))]))),IFunction ("Prelude","readSigned.read'.490._#lambda355._#lambda359#A6",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Real",0) 2 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 3 (IVarAccess 1 [1])] (IReturn (IVar 3)))]))),IFunction ("Prelude","readSigned.read''.490._#lambda363._#lambda367",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 5,IVar 2])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","readSigned.read''.490._#lambda363",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 2,IVar 5]),IVarAssign 8 (IFPCall ("Prelude","readSigned.read''.490._#lambda363._#lambda367",0) 2 [IVar 6]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 7]),IVarAssign 11 (IFPCall ("Prelude","++#P0",0) 2 [IVar 10,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 11])))]))),IFunction ("Prelude","readSigned.read'.490._#lambda355",0) 4 Private [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3])] (ICaseCons 4 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 5))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (ICaseCons 8 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 10,ILit (IChar '-')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 9 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18] [IVarAssign 11 (IFCall ("Prelude","lex",0) [IVar 7]),IVarAssign 12 (IFPCall ("Prelude","readSigned.read''.490._#lambda363",0) 2 [IVar 3]),IVarAssign 13 (ICCall ("Prelude","[]",0) []),IVarAssign 14 (IFCall ("Prelude","foldr",0) [IVar 12,IVar 13,IVar 11]),IVarAssign 15 (IFPCall ("Prelude","readSigned.read'.490._#lambda355._#lambda359",0) 2 [IVar 2]),IVarAssign 16 (ICCall ("Prelude","[]",0) []),IVarAssign 17 (IFCall ("Prelude","foldr",0) [IVar 15,IVar 16,IVar 14]),IVarAssign 18 (IFPCall ("Prelude","++#P0",0) 2 [IVar 17,IVar 5])] (IReturn (IFCall ("Prelude","build",0) [IVar 18]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 19,IVarDecl 20] [IVarAssign 20 (IVarAccess 1 [0]),IVarAssign 19 (IVarAccess 1 [1])] (IReturn (IVar 5)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 5)))]))]))]))]))),IFunction ("Prelude","readSigned.read'.490",0) 3 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","lex",0) [IVar 4]),IVarAssign 6 (IFPCall ("Prelude","readSigned.read''.490._#lambda363",0) 2 [IVar 3]),IVarAssign 7 (ICCall ("Prelude","[]",0) []),IVarAssign 8 (IFCall ("Prelude","foldr",0) [IVar 6,IVar 7,IVar 5]),IVarAssign 9 (IFCall ("Prelude","lex",0) [IVar 4]),IVarAssign 10 (IFPCall ("Prelude","readSigned.read'.490._#lambda355",0) 2 [IVar 2,IVar 3]),IVarAssign 11 (ICCall ("Prelude","[]",0) []),IVarAssign 12 (IFCall ("Prelude","foldr",0) [IVar 10,IVar 11,IVar 9]),IVarAssign 13 (IFPCall ("Prelude","++#P0",0) 2 [IVar 8,IVar 12])] (IReturn (IFCall ("Prelude","build",0) [IVar 13])))),IFunction ("Prelude","read._#lambda346._#lambda350",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",0) [IVar 2,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (IReturn (IVar 4)))])),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","read._#lambda346",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFCall ("Prelude","lex",0) [IVar 5]),IVarAssign 7 (IFPCall ("Prelude","read._#lambda346._#lambda350",0) 2 [IVar 4]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 6]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","readParen.mandatory.470._#lambda334._#lambda338._#lambda342",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 4))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar ')')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 10] [IVarAssign 10 (ICCall ("Prelude","(,)",0) [IVar 2,IVar 6])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 11,IVarDecl 12] [IVarAssign 12 (IVarAccess 1 [0]),IVarAssign 11 (IVarAccess 1 [1])] (IReturn (IVar 4)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 4)))]))]))]))]))),IFunction ("Prelude","readParen.mandatory.470._#lambda334._#lambda338",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFCall ("Prelude","lex",0) [IVar 5]),IVarAssign 7 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334._#lambda338._#lambda342",0) 2 [IVar 4]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 6]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","readParen.mandatory.470",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4])))),IFunction ("Prelude","readParen.optional.470",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","apply",0) [IVar 2,IVar 3]),IVarAssign 5 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 6 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 2]),IVarAssign 7 (ICCall ("Prelude","[]",0) []),IVarAssign 8 (IFCall ("Prelude","foldr",0) [IVar 6,IVar 7,IVar 5]),IVarAssign 9 (IFPCall ("Prelude","++#P0",0) 2 [IVar 4,IVar 8])] (IReturn (IFCall ("Prelude","build",0) [IVar 9])))),IFunction ("Prelude","readParen",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IFPCall ("Prelude","readParen.mandatory.470",0) 1 [IVar 3]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IFPCall ("Prelude","readParen.optional.470",0) 1 [IVar 3])))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Bool",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","readTrue",0) 1 []),IVarAssign 5 (IFCall ("Prelude","readParen.optional.470",0) [IVar 4,IVar 3]),IVarAssign 6 (IFPCall ("Prelude","readFalse",0) 1 []),IVarAssign 7 (IFCall ("Prelude","readParen.optional.470",0) [IVar 6,IVar 3]),IVarAssign 8 (IFPCall ("Prelude","++#P0",0) 2 [IVar 5,IVar 7])] (IReturn (IFCall ("Prelude","build",0) [IVar 8])))),IFunction ("Prelude","reads",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 4 (ICCall ("","int",0) [ILit (IInt 0)])] (IReturn (IFCall ("Prelude","apply",0) [IVar 3,IVar 4])))),IFunction ("Prelude","readJust",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl (-9)] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","take#worker",0) [IVar 3,ILit (IInt 4)]),IVarAssign 5 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 7 (ICCall ("Prelude","_Dict#Eq",0) [IVar 5,IVar 6]),IVarAssign 8 (ICCall ("StringConst","Just",0) []),IVarAssign (-9) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 7,IVar 4,IVar 8])] (ICaseCons (-9) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16] [IVarAssign 10 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 11 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 10,IVar 11]),IVarAssign 13 (IFCall ("Prelude","drop#worker",0) [IVar 3,ILit (IInt 4)]),IVarAssign 14 (IFCall ("Prelude","apply",0) [IVar 12,IVar 13]),IVarAssign 15 (IFPCall ("Prelude","readJust#P2",0) 3 []),IVarAssign 16 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 15,IVar 16,IVar 14]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readJust#P2",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeJust",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe#A8",0) [IVar 3]),IVarAssign 6 (IFPCall ("Prelude","readNothing",0) 1 []),IVarAssign 7 (IFCall ("Prelude","readParen",0) [IVar 5,IVar 6]),IVarAssign 8 (IFCall ("Prelude","apply",0) [IVar 7,IVar 4]),IVarAssign 9 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe#A7",0) [IVar 3]),IVarAssign 10 (IFPCall ("Prelude","readJust",0) 1 [IVar 2]),IVarAssign 11 (IFCall ("Prelude","readParen",0) [IVar 9,IVar 10]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 11,IVar 4]),IVarAssign 13 (IFPCall ("Prelude","++#P0",0) 2 [IVar 8,IVar 12])] (IReturn (IFCall ("Prelude","build",0) [IVar 13])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe#A8",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe#A7",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","readRight",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl (-9)] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","take#worker",0) [IVar 3,ILit (IInt 5)]),IVarAssign 5 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 7 (ICCall ("Prelude","_Dict#Eq",0) [IVar 5,IVar 6]),IVarAssign 8 (ICCall ("StringConst","Right",0) []),IVarAssign (-9) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 7,IVar 4,IVar 8])] (ICaseCons (-9) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16] [IVarAssign 10 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 11 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 10,IVar 11]),IVarAssign 13 (IFCall ("Prelude","drop#worker",0) [IVar 3,ILit (IInt 5)]),IVarAssign 14 (IFCall ("Prelude","apply",0) [IVar 12,IVar 13]),IVarAssign 15 (IFPCall ("Prelude","readRight#P3",0) 3 []),IVarAssign 16 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 15,IVar 16,IVar 14]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readRight#P3",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeRight",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","readLeft",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl (-9)] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","take#worker",0) [IVar 3,ILit (IInt 4)]),IVarAssign 5 (IFPCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",0) 2 []),IVarAssign 7 (ICCall ("Prelude","_Dict#Eq",0) [IVar 5,IVar 6]),IVarAssign 8 (ICCall ("StringConst","Left",0) []),IVarAssign (-9) (IFCall ("Prelude","_impl#==#Prelude.Eq#[]",0) [IVar 7,IVar 4,IVar 8])] (ICaseCons (-9) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16] [IVarAssign 10 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 11 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 10,IVar 11]),IVarAssign 13 (IFCall ("Prelude","drop#worker",0) [IVar 3,ILit (IInt 4)]),IVarAssign 14 (IFCall ("Prelude","apply",0) [IVar 12,IVar 13]),IVarAssign 15 (IFPCall ("Prelude","readLeft#P4",0) 3 []),IVarAssign 16 (IFPCall ("Prelude","id",0) 1 [])] (IReturn (IFCall ("Prelude","build_fold",0) [IVar 15,IVar 16,IVar 14]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))),IFunction ("Prelude","readLeft#P4",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFCall ("Prelude","makeLeft",0) [IVar 3])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 5,IVar 4])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either",0) 4 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14] [IVarAssign 5 (IVarAccess 0 [0]),IVarAssign 4 (IVarAccess 0 [1]),IVarAssign 3 (IVarAccess 0 [2]),IVarAssign 2 (IVarAccess 0 [3]),IVarAssign 6 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either#A10",0) [IVar 4]),IVarAssign 7 (IFPCall ("Prelude","readLeft",0) 1 [IVar 2]),IVarAssign 8 (IFCall ("Prelude","readParen",0) [IVar 6,IVar 7]),IVarAssign 9 (IFCall ("Prelude","apply",0) [IVar 8,IVar 5]),IVarAssign 10 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either#A9",0) [IVar 4]),IVarAssign 11 (IFPCall ("Prelude","readRight",0) 1 [IVar 3]),IVarAssign 12 (IFCall ("Prelude","readParen",0) [IVar 10,IVar 11]),IVarAssign 13 (IFCall ("Prelude","apply",0) [IVar 12,IVar 5]),IVarAssign 14 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 13])] (IReturn (IFCall ("Prelude","build",0) [IVar 14])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either#A10",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either#A9",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 3] [IVarAssign 3 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [IVar 3,ILit (IInt 10)]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",0) [])))]))]))),IFunction ("Prelude","read",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl (-10)] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 5 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 6 (IFCall ("Prelude","apply",0) [IVar 4,IVar 5]),IVarAssign 7 (IFCall ("Prelude","apply",0) [IVar 6,IVar 3]),IVarAssign 8 (IFPCall ("Prelude","read._#lambda346",0) 2 []),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign (-10) (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 7])] (ICaseCons (-10) [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 17,IVarDecl 18] [IVarAssign 17 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 18 (ICCall ("StringConst","Prelude.read: no parse",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 17,IVar 18]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 11,IVarDecl 12] [IVarAssign 12 (IVarAccess 1 [0]),IVarAssign 11 (IVarAccess 1 [1])] (ICaseCons 12 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 11))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16] [IVarAssign 14 (IVarAccess 1 [0]),IVarAssign 13 (IVarAccess 1 [1]),IVarAssign 15 (IFPCall ("Prelude","prim_error",0) 1 []),IVarAssign 16 (ICCall ("StringConst","Prelude.read: ambiguous parse",0) [])] (IReturn (IFCall ("Prelude","$##",0) [IVar 15,IVar 16])))]))]))),IFunction ("Prelude","readListDefault.readl.452._#lambda304._#lambda308",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (ICCall ("Prelude",":",0) [IVar 2,IVar 5]),IVarAssign 8 (ICCall ("Prelude","(,)",0) [IVar 7,IVar 6])] (IReturn (ICCall ("Prelude",":",0) [IVar 8,IVar 4])))]))),IFunction ("Prelude","readListDefault.readl.452._#lambda300",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 8,ILit (IChar ']')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 7 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (ICCall ("Prelude","(,)",0) [IVar 9,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 11,IVarDecl 12] [IVarAssign 12 (IVarAccess 1 [0]),IVarAssign 11 (IVarAccess 1 [1])] (IReturn (IVar 3)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))]))]))),IFunction ("Prelude","readListDefault.readl'.452._#lambda316._#lambda320._#lambda324",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (ICCall ("Prelude",":",0) [IVar 2,IVar 5]),IVarAssign 8 (ICCall ("Prelude","(,)",0) [IVar 7,IVar 6])] (IReturn (ICCall ("Prelude",":",0) [IVar 8,IVar 4])))]))),IFunction ("Prelude","readListDefault.readl'.452._#lambda312",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 8,ILit (IChar ']')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 7 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (ICCall ("Prelude","(,)",0) [IVar 9,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 10,IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 11,IVarDecl 12] [IVarAssign 12 (IVarAccess 1 [0]),IVarAssign 11 (IVarAccess 1 [1])] (IReturn (IVar 3)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))]))]))),IFunction ("Prelude","readListDefault.readl'.452",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readListDefault.readl'.452._#lambda312",0) 2 []),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 9 (IFPCall ("Prelude","readListDefault.readl'.452._#lambda316",0) 2 [IVar 2]),IVarAssign 10 (ICCall ("Prelude","[]",0) []),IVarAssign 11 (IFCall ("Prelude","foldr",0) [IVar 9,IVar 10,IVar 8]),IVarAssign 12 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 11])] (IReturn (IFCall ("Prelude","build",0) [IVar 12])))),IFunction ("Prelude","readListDefault.readl'.452._#lambda316._#lambda320",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (IFCall ("Prelude","readListDefault.readl'.452",0) [IVar 2,IVar 6]),IVarAssign 8 (IFPCall ("Prelude","readListDefault.readl'.452._#lambda316._#lambda320._#lambda324",0) 2 [IVar 5]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 7]),IVarAssign 11 (IFPCall ("Prelude","++#P0",0) 2 [IVar 10,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 11])))]))),IFunction ("Prelude","readListDefault.readl.452._#lambda304",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1]),IVarAssign 7 (IFCall ("Prelude","readListDefault.readl'.452",0) [IVar 2,IVar 6]),IVarAssign 8 (IFPCall ("Prelude","readListDefault.readl.452._#lambda304._#lambda308",0) 2 [IVar 5]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 7]),IVarAssign 11 (IFPCall ("Prelude","++#P0",0) 2 [IVar 10,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 11])))]))),IFunction ("Prelude","readListDefault.readl.452",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readListDefault.readl.452._#lambda300",0) 2 []),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 9 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 10 (IFCall ("Prelude","apply",0) [IVar 8,IVar 9]),IVarAssign 11 (IFCall ("Prelude","apply",0) [IVar 10,IVar 3]),IVarAssign 12 (IFPCall ("Prelude","readListDefault.readl.452._#lambda304",0) 2 [IVar 2]),IVarAssign 13 (ICCall ("Prelude","[]",0) []),IVarAssign 14 (IFCall ("Prelude","foldr",0) [IVar 12,IVar 13,IVar 11]),IVarAssign 15 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 14])] (IReturn (IFCall ("Prelude","build",0) [IVar 15])))),IFunction ("Prelude","readListDefault._#lambda326._#lambda329",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 4))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar '[')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14] [IVarAssign 10 (IFCall ("Prelude","readListDefault.readl.452",0) [IVar 2,IVar 6]),IVarAssign 11 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329#P5",0) 3 []),IVarAssign 12 (IFPCall ("Prelude","id",0) 1 []),IVarAssign 13 (IFCall ("Prelude","build_fold",0) [IVar 11,IVar 12,IVar 10]),IVarAssign 14 (IFPCall ("Prelude","++#P0",0) 2 [IVar 13,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 14]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 15,IVarDecl 16] [IVarAssign 16 (IVarAccess 1 [0]),IVarAssign 15 (IVarAccess 1 [1])] (IReturn (IVar 4)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 4)))]))]))]))]))),IFunction ("Prelude","readListDefault._#lambda326._#lambda329#P5",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (IReturn (IFCall ("Prelude","apply",0) [IVar 2,IVar 3,IVar 4])))),IFunction ("Prelude","readListDefault._#lambda326",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4])))),IFunction ("Prelude","readListDefault",0) 2 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 9 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 2]),IVarAssign 10 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 9]),IVarAssign 11 (ICCall ("Prelude","[]",0) []),IVarAssign 12 (IFCall ("Prelude","foldr",0) [IVar 10,IVar 11,IVar 8]),IVarAssign 13 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 12])] (IReturn (IFCall ("Prelude","build",0) [IVar 13])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda206._#lambda209",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 8,ILit (IChar 'G')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 7 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 9 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 11] [IVarAssign 11 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 11,ILit (IChar 'T')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 10 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 12,IVarDecl 13] [IVarAssign 12 (ICCall ("Prelude","GT",0) []),IVarAssign 13 (ICCall ("Prelude","(,)",0) [IVar 12,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 13,IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (IReturn (IVar 3)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda206",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda206._#lambda209",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda201._#lambda204",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 8,ILit (IChar 'E')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 7 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 9 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 11] [IVarAssign 11 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 11,ILit (IChar 'Q')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 10 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 12,IVarDecl 13] [IVarAssign 12 (ICCall ("Prelude","EQ",0) []),IVarAssign 13 (ICCall ("Prelude","(,)",0) [IVar 12,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 13,IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (IReturn (IVar 3)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda201",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda201._#lambda204",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda196._#lambda199",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (ICaseCons 4 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 6,IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 6 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 8,ILit (IChar 'L')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 7 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 9 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 11] [IVarAssign 11 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 11,ILit (IChar 'T')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 10 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 12,IVarDecl 13] [IVarAssign 12 (ICCall ("Prelude","LT",0) []),IVarAssign 13 (ICCall ("Prelude","(,)",0) [IVar 12,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 13,IVar 3]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 14,IVarDecl 15] [IVarAssign 15 (IVarAccess 1 [0]),IVarAssign 14 (IVarAccess 1 [1])] (IReturn (IVar 3)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 3)))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda196",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda196._#lambda199",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda196",0) 1 []),IVarAssign 5 (IFCall ("Prelude","readParen.optional.470",0) [IVar 4,IVar 3]),IVarAssign 6 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda201",0) 1 []),IVarAssign 7 (IFCall ("Prelude","readParen.optional.470",0) [IVar 6,IVar 3]),IVarAssign 8 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering._#lambda206",0) 1 []),IVarAssign 9 (IFCall ("Prelude","readParen.optional.470",0) [IVar 8,IVar 3]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 9]),IVarAssign 11 (IFCall ("Prelude","build",0) [IVar 10]),IVarAssign 12 (IFPCall ("Prelude","++#P0",0) 2 [IVar 5,IVar 11])] (IReturn (IFCall ("Prelude","build",0) [IVar 12])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#[]",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","_Dict#Read",0) 2 (IBlock [IVarDecl 4,IVarDecl 5] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1])] (IReturn (IVar 5)))]))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44._#lambda48",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 5,IVar 2])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFPCall ("Prelude","null_fold",0) 2 []),IVarAssign 7 (ICCall ("Prelude","True",0) []),IVarAssign 8 (IFCall ("Prelude","foldr",0) [IVar 6,IVar 7,IVar 4]),IVarAssign 9 (IFCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44#A11",0) [IVar 4,IVar 5,IVar 8]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44#A11",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] IExempt),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 7,ILit (IChar '"')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 8 (ICCall ("","char",0) [IVar 7]),IVarAssign 9 (ICCall ("Prelude",":",0) [IVar 8,IVar 6]),IVarAssign 10 (IFCall ("Prelude","readStringLiteral",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44._#lambda48",0) 2 [IVar 3]),IVarAssign 12 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))]))]))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41._#lambda44",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35._#lambda39",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 5,IVar 2])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFPCall ("Prelude","null_fold",0) 2 []),IVarAssign 7 (ICCall ("Prelude","True",0) []),IVarAssign 8 (IFCall ("Prelude","foldr",0) [IVar 6,IVar 7,IVar 4]),IVarAssign 9 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35#A12",0) [IVar 4,IVar 5,IVar 8]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35#A12",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] IExempt),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 7,ILit (IChar '\'')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 8 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35._#lambda39",0) 2 [IVar 3]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (ICCall ("","char",0) [IVar 7]),IVarAssign 11 (ICCall ("Prelude","(,)",0) [IVar 10,IVar 6]),IVarAssign 12 (ICCall ("Prelude","[]",0) []),IVarAssign 13 (ICCall ("Prelude",":",0) [IVar 11,IVar 12])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 13]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32._#lambda35",0) 2 []),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 9 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char._#lambda32",0) 1 []),IVarAssign 10 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 9]),IVarAssign 11 (ICCall ("Prelude","[]",0) []),IVarAssign 12 (IFCall ("Prelude","foldr",0) [IVar 10,IVar 11,IVar 8]),IVarAssign 13 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 12])] (IReturn (IFCall ("Prelude","build",0) [IVar 13])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Char",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char",0) 2 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) 1 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 2,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26._#lambda30",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 5,IVar 2])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903._#lambda21",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFCall ("Prelude","i2f",0) [IVar 4]),IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 6,IVar 5])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 3])))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl (-5)] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903#P6",0) 2 []),IVarAssign 4 (ICCall ("Prelude","True",0) []),IVarAssign (-5) (IFCall ("Prelude","foldr",0) [IVar 3,IVar 4,IVar 2])] (ICaseCons (-5) [IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 6 (IFCall ("Prelude","readNatLiteral",0) [IVar 2]),IVarAssign 7 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903._#lambda21",0) 2 []),IVarAssign 8 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 6]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 10 (IVarAccess 1 [0]),IVarAssign 9 (IVarAccess 1 [1])] (ICaseCons 9 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 11] [IVarAssign 11 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 11,ILit (IChar '-')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl (-12)] [IVarAssign (-12) (IFCall ("Prelude","readPosFloat",0) [IVar 10])] (ICaseCons (-12) [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 13,IVarDecl 14] [IVarAssign 14 (IVarAccess 1 [0]),IVarAssign 13 (IVarAccess 1 [1])] (ICaseCons 13 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 15,IVarDecl 16] [IVarAssign 16 (IVarAccess 1 [0]),IVarAssign 15 (IVarAccess 1 [1])] (ICaseCons 14 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 17,IVarDecl 18,IVarDecl 19] [IVarAssign 17 (IFCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Float",0) [IVar 15]),IVarAssign 18 (ICCall ("Prelude","(,)",0) [IVar 17,IVar 16]),IVarAssign 19 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude",":",0) [IVar 18,IVar 19]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 20,IVarDecl 21] [IVarAssign 21 (IVarAccess 1 [0]),IVarAssign 20 (IVarAccess 1 [1])] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 22,IVarDecl 23] [IVarAssign 22 (ICCall ("","char",0) [IVar 11]),IVarAssign 23 (ICCall ("Prelude",":",0) [IVar 22,IVar 10])] (IReturn (IFCall ("Prelude","readPosFloat",0) [IVar 23])))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903#P6",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 4] [IVarAssign 4 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqChar",0) [ILit (IChar '0'),IVar 4]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqChar",0) [IVar 4,ILit (IChar '9')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (IVar 3))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFPCall ("Prelude","null_fold",0) 2 []),IVarAssign 7 (ICCall ("Prelude","True",0) []),IVarAssign 8 (IFCall ("Prelude","foldr",0) [IVar 6,IVar 7,IVar 4]),IVarAssign 9 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26#A13",0) [IVar 4,IVar 5,IVar 8]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26#A13",0) 3 Public [2] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 4 [IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) []))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] IExempt),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 7] [IVarAssign 7 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqChar",0) [ILit (IChar '0'),IVar 7]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqChar",0) [IVar 7,ILit (IChar '9')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12] [IVarAssign 8 (ICCall ("","char",0) [IVar 7]),IVarAssign 9 (ICCall ("Prelude",":",0) [IVar 8,IVar 6]),IVarAssign 10 (IFCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float.readFloat.903",0) [IVar 9]),IVarAssign 11 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26._#lambda30",0) 2 [IVar 3]),IVarAssign 12 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 11,IVar 12,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))]))]))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23._#lambda26",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18,IVarDecl 19,IVarDecl 20,IVarDecl 21,IVarDecl 22,IVarDecl 23,IVarDecl 24,IVarDecl 25,IVarDecl 26,IVarDecl 27,IVarDecl 28,IVarDecl 29,IVarDecl 30,IVarDecl 31] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Float",0) []),IVarAssign 5 (IFPCall ("Prelude","_impl#+#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#-#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 7 (IFPCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 8 (IFPCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 9 (IFPCall ("Prelude","_impl#abs#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 10 (IFPCall ("Prelude","_impl#signum#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 11 (IFPCall ("Prelude","_impl#fromInt#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Num",0) [IVar 5,IVar 6,IVar 7,IVar 8,IVar 9,IVar 10,IVar 11]),IVarAssign 13 (ICCall ("Prelude","_Dict#Real",0) [IVar 12,IVar 4]),IVarAssign 14 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23",0) 1 []),IVarAssign 15 (IFCall ("Prelude","readSigned.read'.490",0) [IVar 13,IVar 14,IVar 3]),IVarAssign 16 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 17 (IFPCall ("Prelude","_impl#+#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 18 (IFPCall ("Prelude","_impl#-#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 19 (IFPCall ("Prelude","_impl#*#Prelude.Num#Prelude.Float",0) 2 []),IVarAssign 20 (IFPCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 21 (IFPCall ("Prelude","_impl#abs#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 22 (IFPCall ("Prelude","_impl#signum#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 23 (IFPCall ("Prelude","_impl#fromInt#Prelude.Num#Prelude.Float",0) 1 []),IVarAssign 24 (ICCall ("Prelude","_Dict#Num",0) [IVar 17,IVar 18,IVar 19,IVar 20,IVar 21,IVar 22,IVar 23]),IVarAssign 25 (ICCall ("Prelude","_Dict#Real",0) [IVar 24,IVar 4]),IVarAssign 26 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float._#lambda23",0) 1 []),IVarAssign 27 (IFPCall ("Prelude","readSigned.read'.490",0) 1 [IVar 25,IVar 26]),IVarAssign 28 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 27]),IVarAssign 29 (ICCall ("Prelude","[]",0) []),IVarAssign 30 (IFCall ("Prelude","foldr",0) [IVar 28,IVar 29,IVar 16]),IVarAssign 31 (IFPCall ("Prelude","++#P0",0) 2 [IVar 15,IVar 30])] (IReturn (IFCall ("Prelude","build",0) [IVar 31])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10._#lambda13._#lambda17",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 6 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 7] [IVarAssign 7 (ICCall ("Prelude","(,)",0) [IVar 5,IVar 2])] (IReturn (ICCall ("Prelude",":",0) [IVar 7,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 8,IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0]),IVarAssign 8 (IVarAccess 1 [1])] (IReturn (IVar 4)))]))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10._#lambda13",0) 2 Private [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10] [IVarAssign 5 (IVarAccess 1 [0]),IVarAssign 4 (IVarAccess 1 [1]),IVarAssign 6 (IFCall ("Prelude","readNatLiteral",0) [IVar 4]),IVarAssign 7 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10._#lambda13._#lambda17",0) 2 [IVar 5]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 6]),IVarAssign 10 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 3])] (IReturn (IFCall ("Prelude","build",0) [IVar 10])))]))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10",0) 1 Private [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFCall ("Prelude","lexDigits",0) [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10._#lambda13",0) 2 []),IVarAssign 5 (ICCall ("Prelude","[]",0) [])] (IReturn (IFCall ("Prelude","foldr",0) [IVar 4,IVar 5,IVar 3])))),IFunction ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18,IVarDecl 19,IVarDecl 20,IVarDecl 21,IVarDecl 22,IVarDecl 23,IVarDecl 24,IVarDecl 25,IVarDecl 26,IVarDecl 27,IVarDecl 28,IVarDecl 29,IVarDecl 30,IVarDecl 31] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",0) []),IVarAssign 5 (IFPCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 7 (IFPCall ("Prelude","_impl#*#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 8 (IFPCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 9 (IFPCall ("Prelude","_impl#abs#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 10 (IFPCall ("Prelude","_impl#signum#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 11 (IFPCall ("Prelude","_impl#fromInt#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Num",0) [IVar 5,IVar 6,IVar 7,IVar 8,IVar 9,IVar 10,IVar 11]),IVarAssign 13 (ICCall ("Prelude","_Dict#Real",0) [IVar 12,IVar 4]),IVarAssign 14 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10",0) 1 []),IVarAssign 15 (IFCall ("Prelude","readSigned.read'.490",0) [IVar 13,IVar 14,IVar 3]),IVarAssign 16 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 17 (IFPCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 18 (IFPCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 19 (IFPCall ("Prelude","_impl#*#Prelude.Num#Prelude.Int",0) 2 []),IVarAssign 20 (IFPCall ("Prelude","_impl#negate#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 21 (IFPCall ("Prelude","_impl#abs#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 22 (IFPCall ("Prelude","_impl#signum#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 23 (IFPCall ("Prelude","_impl#fromInt#Prelude.Num#Prelude.Int",0) 1 []),IVarAssign 24 (ICCall ("Prelude","_Dict#Num",0) [IVar 17,IVar 18,IVar 19,IVar 20,IVar 21,IVar 22,IVar 23]),IVarAssign 25 (ICCall ("Prelude","_Dict#Real",0) [IVar 24,IVar 4]),IVarAssign 26 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int._#lambda10",0) 1 []),IVarAssign 27 (IFPCall ("Prelude","readSigned.read'.490",0) 1 [IVar 25,IVar 26]),IVarAssign 28 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 27]),IVarAssign 29 (ICCall ("Prelude","[]",0) []),IVarAssign 30 (IFCall ("Prelude","foldr",0) [IVar 28,IVar 29,IVar 16]),IVarAssign 31 (IFPCall ("Prelude","++#P0",0) 2 [IVar 15,IVar 30])] (IReturn (IFCall ("Prelude","build",0) [IVar 31])))),IFunction ("Prelude","_def#readList#Prelude.Read",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 5 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 2]),IVarAssign 6 (ICCall ("Prelude","[]",0) []),IVarAssign 7 (IFCall ("Prelude","foldr",0) [IVar 5,IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 9 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 2]),IVarAssign 10 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 9]),IVarAssign 11 (ICCall ("Prelude","[]",0) []),IVarAssign 12 (IFCall ("Prelude","foldr",0) [IVar 10,IVar 11,IVar 8]),IVarAssign 13 (IFPCall ("Prelude","++#P0",0) 2 [IVar 7,IVar 12])] (IReturn (IFCall ("Prelude","build",0) [IVar 13])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Maybe",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Maybe",0) 1 [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe",0) 2 [IVar 2])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 4,IVar 3])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Bool",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Bool",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Bool",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 3,IVar 2])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Either",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Either",0) 1 [IVar 2,IVar 3]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either",0) 2 [IVar 2,IVar 3])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 4])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Ordering",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Ordering",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 3,IVar 2])))),IFunction ("Prelude","_inst#Prelude.Read#[]",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#[]",0) 1 [IVar 2]),IVarAssign 4 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#[]",0) 1 [IVar 2])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 4,IVar 3])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Float",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Float",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 3,IVar 2])))),IFunction ("Prelude","_inst#Prelude.Read#Prelude.Int",0) 0 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 2 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Int",0) 1 []),IVarAssign 3 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int",0) 2 [])] (IReturn (ICCall ("Prelude","_Dict#Read",0) [IVar 3,IVar 2])))),IFunction ("Prelude","readDotNat1",0) 1 Public [0] (IFuncBody (IBlock [IVarDecl 2] [IVarAssign 2 (IVarAccess 0 [0])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 3,IVarDecl 4] [IVarAssign 3 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 4 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 3,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 8 (IFCall ("Prelude","primOrd",0) [IVar 7])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 48),IVar 8]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 58),IVar 8]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10,IVarDecl 11] [IVarAssign 9 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 10 (ICCall ("","char",0) [IVar 7]),IVarAssign 11 (ICCall ("Prelude",":",0) [IVar 10,IVar 6])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 9,IVar 11]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl (-12)] [IVarAssign (-12) (IFCall ("Prelude","readDotNat1",0) [IVar 6])] (ICaseCons (-12) [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 13,IVarDecl 14,IVarDecl 15] [IVarAssign 14 (IVarAccess 1 [0]),IVarAssign 13 (IVarAccess 1 [1]),IVarAssign 15 (IFCall ("Prelude","readDotNat1#A14",0) [IVar 8,IVar 13])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 15,IVar 14])))]))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 16,IVarDecl 17,IVarDecl 18] [IVarAssign 16 (ICCall ("","float",0) [ILit (IFloat 0.0)]),IVarAssign 17 (ICCall ("","char",0) [IVar 7]),IVarAssign 18 (ICCall ("Prelude",":",0) [IVar 17,IVar 6])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 16,IVar 18])))]))]))]))),IFunction ("Prelude","readDotNat1#A14",0) 2 Public [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 3 [IConsBranch ("","float",0) 1 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 5 (IFCall ("Prelude","primSubInt",0) [IVar 2,ILit (IInt 48)]),IVarAssign 6 (IFCall ("Prelude","primI2F",0) [IVar 5]),IVarAssign 7 (IFCall ("Prelude","primAddFloat",0) [IVar 6,IVar 4]),IVarAssign 8 (IFCall ("Prelude","primDivFloat",0) [IVar 7,ILit (IFloat 10.0)])] (IReturn (ICCall ("","float",0) [IVar 8])))]))),IFunction ("Prelude","readNat",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 4] [IVarAssign 4 (ICCall ("Prelude","[]",0) [])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 3,IVar 4]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 7 (IVarAccess 1 [0]),IVarAssign 8 (IFCall ("Prelude","primOrd",0) [IVar 7])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 48),IVar 8]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primLtEqInt",0) [ILit (IInt 58),IVar 8]))),IConsBranch ("Prelude","True",0) 0 (IBlock [IVarDecl 9,IVarDecl 10] [IVarAssign 9 (ICCall ("","char",0) [IVar 7]),IVarAssign 10 (ICCall ("Prelude",":",0) [IVar 9,IVar 6])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 3,IVar 10]))),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 11] [IVarAssign 11 (IFCall ("Prelude","readNat#A15",0) [IVar 3,IVar 8])] (IReturn (IFCall ("Prelude","readNat",0) [IVar 6,IVar 11])))])),IConsBranch ("Prelude","False",1) 0 (IBlock [IVarDecl 12,IVarDecl 13] [IVarAssign 12 (ICCall ("","char",0) [IVar 7]),IVarAssign 13 (ICCall ("Prelude",":",0) [IVar 12,IVar 6])] (IReturn (ICCall ("Prelude","(,)",0) [IVar 3,IVar 13])))]))]))]))),IFunction ("Prelude","readNat#A15",0) 2 Public [0] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1])] (ICaseCons 2 [IConsBranch ("","int",0) 1 (IBlock [IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7] [IVarAssign 4 (IVarAccess 1 [0]),IVarAssign 5 (IFCall ("Prelude","primMulInt",0) [IVar 4,ILit (IInt 10)]),IVarAssign 6 (IFCall ("Prelude","primAddInt",0) [IVar 5,IVar 3]),IVarAssign 7 (IFCall ("Prelude","primSubInt",0) [IVar 6,ILit (IInt 48)])] (IReturn (ICCall ("","int",0) [IVar 7])))]))),IFunction ("Prelude","readParen.mandatory.470._#lambda334",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 4))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar '(')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14] [IVarAssign 10 (IFCall ("Prelude","readParen.optional.470",0) [IVar 2,IVar 6]),IVarAssign 11 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334._#lambda338",0) 2 []),IVarAssign 12 (ICCall ("Prelude","[]",0) []),IVarAssign 13 (IFCall ("Prelude","foldr",0) [IVar 11,IVar 12,IVar 10]),IVarAssign 14 (IFPCall ("Prelude","++#P0",0) 2 [IVar 13,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 14]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 15,IVarDecl 16] [IVarAssign 16 (IVarAccess 1 [0]),IVarAssign 15 (IVarAccess 1 [1])] (IReturn (IVar 4)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 4)))]))]))]))]))),IFunction ("Prelude","readListDefault.readl'.452._#lambda316",0) 3 Private [1] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2])] (ICaseCons 3 [IConsBranch ("Prelude","(,)",0) 2 (IBlock [IVarDecl 5,IVarDecl 6] [IVarAssign 6 (IVarAccess 1 [0]),IVarAssign 5 (IVarAccess 1 [1])] (ICaseCons 5 [IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 4))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 7,IVarDecl 8] [IVarAssign 8 (IVarAccess 1 [0]),IVarAssign 7 (IVarAccess 1 [1])] (ICaseCons 7 [IConsBranch ("","char",0) 1 (IBlock [IVarDecl 9] [IVarAssign 9 (IVarAccess 1 [0])] (ICaseCons (-1) [IConsBranch ("","primCond",-1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","primEqChar",0) [IVar 9,ILit (IChar ',')]))),IConsBranch ("Prelude","True",0) 0 (IBlock [] [] (ICaseCons 8 [IConsBranch ("Prelude","[]",0) 0 (IBlock [IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 10 (IFCall ("Prelude","readsPrec",0) [IVar 2]),IVarAssign 11 (ICCall ("","int",0) [ILit (IInt 0)]),IVarAssign 12 (IFCall ("Prelude","apply",0) [IVar 10,IVar 11]),IVarAssign 13 (IFCall ("Prelude","apply",0) [IVar 12,IVar 6]),IVarAssign 14 (IFPCall ("Prelude","readListDefault.readl'.452._#lambda316._#lambda320",0) 2 [IVar 2]),IVarAssign 15 (ICCall ("Prelude","[]",0) []),IVarAssign 16 (IFCall ("Prelude","foldr",0) [IVar 14,IVar 15,IVar 13]),IVarAssign 17 (IFPCall ("Prelude","++#P0",0) 2 [IVar 16,IVar 4])] (IReturn (IFCall ("Prelude","build",0) [IVar 17]))),IConsBranch ("Prelude",":",1) 2 (IBlock [IVarDecl 18,IVarDecl 19] [IVarAssign 19 (IVarAccess 1 [0]),IVarAssign 18 (IVarAccess 1 [1])] (IReturn (IVar 4)))])),IConsBranch ("Prelude","False",1) 0 (IBlock [] [] (IReturn (IVar 4)))]))]))]))]))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char._#lambda41",0) 1 []),IVarAssign 4 (IFCall ("Prelude","readParen.optional.470",0) [IVar 3,IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Char",0) 2 []),IVarAssign 6 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Char",0) 1 []),IVarAssign 7 (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 6]),IVarAssign 8 (IFCall ("Prelude","readListDefault",0) [IVar 7,IVar 2]),IVarAssign 9 (IFPCall ("Prelude","++#P0",0) 2 [IVar 4,IVar 8])] (IReturn (IFCall ("Prelude","build",0) [IVar 9])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Maybe",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Maybe",0) 1 [IVar 2]),IVarAssign 5 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 6 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe",0) 2 [IVar 2]),IVarAssign 7 (ICCall ("Prelude","_Dict#Read",0) [IVar 6,IVar 4]),IVarAssign 8 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 7]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 5]),IVarAssign 11 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 12 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Maybe",0) 2 [IVar 2]),IVarAssign 13 (ICCall ("Prelude","_Dict#Read",0) [IVar 12,IVar 4]),IVarAssign 14 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 13]),IVarAssign 15 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 14]),IVarAssign 16 (ICCall ("Prelude","[]",0) []),IVarAssign 17 (IFCall ("Prelude","foldr",0) [IVar 15,IVar 16,IVar 11]),IVarAssign 18 (IFPCall ("Prelude","++#P0",0) 2 [IVar 10,IVar 17])] (IReturn (IFCall ("Prelude","build",0) [IVar 18])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Bool",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Bool",0) 1 []),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Bool",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 3]),IVarAssign 7 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 6]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 4]),IVarAssign 10 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 11 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Bool",0) 2 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Read",0) [IVar 11,IVar 3]),IVarAssign 13 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 12]),IVarAssign 14 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 13]),IVarAssign 15 (ICCall ("Prelude","[]",0) []),IVarAssign 16 (IFCall ("Prelude","foldr",0) [IVar 14,IVar 15,IVar 10]),IVarAssign 17 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 16])] (IReturn (IFCall ("Prelude","build",0) [IVar 17])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Either",0) 3 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18,IVarDecl 19] [IVarAssign 4 (IVarAccess 0 [0]),IVarAssign 3 (IVarAccess 0 [1]),IVarAssign 2 (IVarAccess 0 [2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Either",0) 1 [IVar 2,IVar 3]),IVarAssign 6 (IFCall ("Prelude","lex",0) [IVar 4]),IVarAssign 7 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either",0) 2 [IVar 2,IVar 3]),IVarAssign 8 (ICCall ("Prelude","_Dict#Read",0) [IVar 7,IVar 5]),IVarAssign 9 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 8]),IVarAssign 10 (ICCall ("Prelude","[]",0) []),IVarAssign 11 (IFCall ("Prelude","foldr",0) [IVar 9,IVar 10,IVar 6]),IVarAssign 12 (IFCall ("Prelude","lex",0) [IVar 4]),IVarAssign 13 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Either",0) 2 [IVar 2,IVar 3]),IVarAssign 14 (ICCall ("Prelude","_Dict#Read",0) [IVar 13,IVar 5]),IVarAssign 15 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 14]),IVarAssign 16 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 15]),IVarAssign 17 (ICCall ("Prelude","[]",0) []),IVarAssign 18 (IFCall ("Prelude","foldr",0) [IVar 16,IVar 17,IVar 12]),IVarAssign 19 (IFPCall ("Prelude","++#P0",0) 2 [IVar 11,IVar 18])] (IReturn (IFCall ("Prelude","build",0) [IVar 19])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Ordering",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Ordering",0) 1 []),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 3]),IVarAssign 7 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 6]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 4]),IVarAssign 10 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 11 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Ordering",0) 2 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Read",0) [IVar 11,IVar 3]),IVarAssign 13 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 12]),IVarAssign 14 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 13]),IVarAssign 15 (ICCall ("Prelude","[]",0) []),IVarAssign 16 (IFCall ("Prelude","foldr",0) [IVar 14,IVar 15,IVar 10]),IVarAssign 17 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 16])] (IReturn (IFCall ("Prelude","build",0) [IVar 17])))),IFunction ("Prelude","_impl#readList#Prelude.Read#[]",0) 2 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17,IVarDecl 18] [IVarAssign 3 (IVarAccess 0 [0]),IVarAssign 2 (IVarAccess 0 [1]),IVarAssign 4 (IFPCall ("Prelude","_impl#readList#Prelude.Read#[]",0) 1 [IVar 2]),IVarAssign 5 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 6 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#[]",0) 1 [IVar 2]),IVarAssign 7 (ICCall ("Prelude","_Dict#Read",0) [IVar 6,IVar 4]),IVarAssign 8 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 7]),IVarAssign 9 (ICCall ("Prelude","[]",0) []),IVarAssign 10 (IFCall ("Prelude","foldr",0) [IVar 8,IVar 9,IVar 5]),IVarAssign 11 (IFCall ("Prelude","lex",0) [IVar 3]),IVarAssign 12 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#[]",0) 1 [IVar 2]),IVarAssign 13 (ICCall ("Prelude","_Dict#Read",0) [IVar 12,IVar 4]),IVarAssign 14 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 13]),IVarAssign 15 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 14]),IVarAssign 16 (ICCall ("Prelude","[]",0) []),IVarAssign 17 (IFCall ("Prelude","foldr",0) [IVar 15,IVar 16,IVar 11]),IVarAssign 18 (IFPCall ("Prelude","++#P0",0) 2 [IVar 10,IVar 17])] (IReturn (IFCall ("Prelude","build",0) [IVar 18])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Float",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Float",0) 1 []),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 3]),IVarAssign 7 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 6]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 4]),IVarAssign 10 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 11 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Float",0) 2 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Read",0) [IVar 11,IVar 3]),IVarAssign 13 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 12]),IVarAssign 14 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 13]),IVarAssign 15 (ICCall ("Prelude","[]",0) []),IVarAssign 16 (IFCall ("Prelude","foldr",0) [IVar 14,IVar 15,IVar 10]),IVarAssign 17 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 16])] (IReturn (IFCall ("Prelude","build",0) [IVar 17])))),IFunction ("Prelude","_impl#readList#Prelude.Read#Prelude.Int",0) 1 Public [] (IFuncBody (IBlock [IVarDecl 2,IVarDecl 3,IVarDecl 4,IVarDecl 5,IVarDecl 6,IVarDecl 7,IVarDecl 8,IVarDecl 9,IVarDecl 10,IVarDecl 11,IVarDecl 12,IVarDecl 13,IVarDecl 14,IVarDecl 15,IVarDecl 16,IVarDecl 17] [IVarAssign 2 (IVarAccess 0 [0]),IVarAssign 3 (IFPCall ("Prelude","_impl#readList#Prelude.Read#Prelude.Int",0) 1 []),IVarAssign 4 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 5 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int",0) 2 []),IVarAssign 6 (ICCall ("Prelude","_Dict#Read",0) [IVar 5,IVar 3]),IVarAssign 7 (IFPCall ("Prelude","readListDefault._#lambda326._#lambda329",0) 2 [IVar 6]),IVarAssign 8 (ICCall ("Prelude","[]",0) []),IVarAssign 9 (IFCall ("Prelude","foldr",0) [IVar 7,IVar 8,IVar 4]),IVarAssign 10 (IFCall ("Prelude","lex",0) [IVar 2]),IVarAssign 11 (IFPCall ("Prelude","_impl#readsPrec#Prelude.Read#Prelude.Int",0) 2 []),IVarAssign 12 (ICCall ("Prelude","_Dict#Read",0) [IVar 11,IVar 3]),IVarAssign 13 (IFPCall ("Prelude","readListDefault._#lambda326",0) 1 [IVar 12]),IVarAssign 14 (IFPCall ("Prelude","readParen.mandatory.470._#lambda334",0) 2 [IVar 13]),IVarAssign 15 (ICCall ("Prelude","[]",0) []),IVarAssign 16 (IFCall ("Prelude","foldr",0) [IVar 14,IVar 15,IVar 10]),IVarAssign 17 (IFPCall ("Prelude","++#P0",0) 2 [IVar 9,IVar 16])] (IReturn (IFCall ("Prelude","build",0) [IVar 17]))))]