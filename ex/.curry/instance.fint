Prog "instance" ["Prelude"] [Type ("instance","Tree") Public [0] [Cons ("instance","Leaf") 0 Public [],Cons ("instance","Branch") 3 Public [TVar 0,TCons ("instance","Tree") [TVar 0],TCons ("instance","Tree") [TVar 0]]]] [Func ("instance","_inst#Prelude.Eq#instance.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (TCons ("Prelude","_Dict#Eq") [TCons ("instance","Tree") [TVar 0]])) (Rule [] (Var 0)),Func ("instance","_impl#==#Prelude.Eq#instance.Tree") 3 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("instance","_impl#/=#Prelude.Eq#instance.Tree") 1 Public (FuncType (TCons ("Prelude","_Dict#Eq") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (FuncType (TCons ("instance","Tree") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [] (Var 0)),Func ("instance","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0))] []