{- AbstractCurry 2.0 -}
CurryProg "sort"
["Prelude"]
Nothing
 []
 []
 []
 [CFunc ("sort","sorted") 1 Public (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))) (CTCons ("Prelude","Bool")))) [CRule [CPComb ("Prelude","[]") []] (CSimpleRhs (CSymbol ("Prelude","True")) []),CRule [CPComb ("Prelude",":") [CPVar (0,"_"),CPComb ("Prelude","[]") []]] (CSimpleRhs (CSymbol ("Prelude","True")) []),CRule [CPComb ("Prelude",":") [CPVar (1,"x"),CPComb ("Prelude",":") [CPVar (2,"y"),CPVar (3,"xs")]]] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","&&")) (CApply (CApply (CSymbol ("Prelude","<")) (CVar (1,"x"))) (CVar (2,"y")))) (CApply (CSymbol ("sort","sorted")) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (2,"y"))) (CVar (3,"xs"))))) [])],
  CFunc ("sort","perm") 1 Public (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))) (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))))) [CRule [CPComb ("Prelude","[]") []] (CSimpleRhs (CSymbol ("Prelude","[]")) []),CRule [CPComb ("Prelude",":") [CPVar (0,"x"),CPVar (1,"xs")]] (CSimpleRhs (CApply (CApply (CSymbol ("sort","insert")) (CVar (0,"x"))) (CApply (CSymbol ("sort","perm")) (CVar (1,"xs")))) [])],
  CFunc ("sort","insert") 2 Public (CQualType (CContext []) (CFuncType (CTCons ("Prelude","Int")) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))) (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int")))))) [CRule [CPVar (0,"x"),CPComb ("Prelude","[]") []] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CVar (0,"x"))) (CSymbol ("Prelude","[]"))) []),CRule [CPVar (1,"x"),CPComb ("Prelude",":") [CPVar (2,"y"),CPVar (3,"ys")]] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CVar (1,"x"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (2,"y"))) (CVar (3,"ys")))) []),CRule [CPVar (4,"x"),CPComb ("Prelude",":") [CPVar (5,"y"),CPVar (6,"ys")]] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CVar (5,"y"))) (CApply (CApply (CSymbol ("sort","insert")) (CVar (4,"x"))) (CVar (6,"ys")))) [])],
  CFunc ("sort","sort") 1 Public (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))) (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int"))))) [CRule [CPVar (0,"xs")] (CSimpleRhs (CLetDecl [CLocalPat (CPVar (1,"p")) (CSimpleRhs (CApply (CSymbol ("sort","perm")) (CVar (0,"xs"))) [])] (CApply (CApply (CSymbol ("Prelude","&>")) (CApply (CSymbol ("sort","sorted")) (CVar (1,"p")))) (CVar (1,"p")))) [])],
  CFunc ("sort","main") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTCons ("Prelude","Int")))) [CRule [] (CSimpleRhs (CApply (CSymbol ("sort","sort")) (CApply (CSymbol ("Prelude","reverse")) (CApply (CApply (CSymbol ("Prelude","enumFromTo")) (CLit (CIntc 1))) (CLit (CIntc 14))))) [])]]
 []
