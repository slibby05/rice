Prog "deep-bind" ["Prelude"] [Type ("deep-bind","Xint") Public [] [Cons ("deep-bind","Zero") 0 Public [],Cons ("deep-bind","Succ") 1 Public [TCons ("deep-bind","Xint") []],Cons ("deep-bind","Pred") 1 Public [TCons ("deep-bind","Xint") []],Cons ("deep-bind","Pair") 2 Public [TCons ("deep-bind","Xint") [],TCons ("deep-bind","Xint") []]]] [Func ("deep-bind","main") 0 Public (TCons ("deep-bind","Xint") []) (Rule [] (Let [(1,Comb ConsCall ("deep-bind","Succ") [Comb ConsCall ("deep-bind","Succ") [Var 2]]),(2,Comb ConsCall ("deep-bind","Pair") [Comb ConsCall ("deep-bind","Pred") [Comb ConsCall ("deep-bind","Zero") []],Comb ConsCall ("deep-bind","Succ") [Var 1]])] (Comb ConsCall ("deep-bind","Succ") [Comb ConsCall ("deep-bind","Pred") [Comb ConsCall ("deep-bind","Pair") [Comb ConsCall ("deep-bind","Succ") [Var 1],Var 2]]])))] []